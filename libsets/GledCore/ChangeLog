2011-08-26  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GTime.cxx:
	* Gled/GTime.h:
	Add never-time (minus max long_64 for sec and musec).

2011-08-22  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GTime.cxx:
	Fix bug in operator+=(double) and operator-=(double).

2011-06-29  Matevz Tadel  <matevz.tadel@ijs.si>

	Add more GTime to text functions, add GTime weed.

	* Gled/GTime.cxx:
	* Gled/GTime.h:
	Rename ToAscGMT() to ToAscUTC().
	Add functions ToDateTimeUTC/Local().

	* perllib/GLED_GledCore_Widgets.pm:
	Add weed TimeOut() displaying date and time from stone GTime.

2011-06-28  Matevz Tadel  <matevz.tadel@ijs.si>

	Make GTime streamable in a portable way (32 .vs. 64-bit long).

	* Gled/GTime.cxx:
	* Gled/GTime.h:
	Use Long64_t as data-type to make it properly streamable.
	Add functions ToAscGMT() and ToAscLocal() returning standard
	strings representations. Need to add short versions.
	Need to test on 32 bits (pretty sure some casts misssing).

	* Ephra/Mountain.cxx:
	* Glasses/ZQueen.cxx:
	Follow-up on changes in GTime.

2011-06-26  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	White-space.

2011-06-24  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	* Glasses/ZGlass.h:
	* Glasses/ZQueen.h:
	* GledView/FTW.cxx:
	Fix some compilation warnings with gcc-4.6.

2011-06-19  Matevz Tadel  <matevz.tadel@ijs.si>

	* Stones/ZRCStone.cxx:
	* Stones/ZRCStone.h:
	Removed files - replace with less confusing SRefCounted.

	* Stones/SRefCounted.cxx:
	* Stones/SRefCounted.h:
	Added files - replace ZRCStone. Also provide verison without
	virtual functions SRefCountedNV.

	* catalog.patch:
	Register also the SRefCountedNV.

2011-05-29  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GCRC32.cxx:
	* Gled/GCRC32.h:
	New helper class for doing CRC-32.

2011-03-06  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	Increase wait time in Accept from 20s to 60s.
	This was too small when running with google heap checker.

2010-12-31  Matevz Tadel  <matevz.tadel@ijs.si>

	Mac fixes.

	* GledView/MCW_View.cxx:
	Add include for mac.

	* Pupils/Pupil.cxx:
	Fix initialization of GLEW for mac.

2010-12-19  Matevz Tadel  <matevz.tadel@ijs.si>

	Add A_Rnr::HandlePick() function -- it can be called via a
	context-menu entry in Pupil.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Extend pick_menu_data to also hold name-stack list and name-stack
	iterator for given entry.

	Add pick-menu entry "Deliver Event" that triggers callback into
	A_Rnr::HandlePick() (new function, see below).

	Move the struct and supporting functions into Pupil (was in
	unnamed namespace before).

	* RnrBase/A_Rnr.h:
	Add a new virtual function:
	  virtual void HandlePick(RnrDriver* rd, lNSE_t& ns, lNSE_i nsi) {}

	* Rnr/GL/WGlDirectory_GL_Rnr.cxx:
	* Rnr/GL/WGlDirectory_GL_Rnr.h:
	As a demonstration, implement HandlePick().

2010-12-12  Matevz Tadel  <matevz.tadel@ijs.si>

	Simplify Saturn -> Eye communication.

	Drop special TextMessage class, use special rays from EyeInfo instead.
	Eye needs to look for them, they are forwarded to
	  virtual void AbsorbEyeInfoRay(Ray& ray);
	where sub-classes can add further actions.

	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Remove text-message sending.
	Send Ray* directly, not in an SaturnToEyeEnvelope.
	White space.

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	Receive Ray* directly.
	Start setting up functions for clean Eye shutdown.
	White & gray space.

	* Eye/Ray.h:
	Remove SaturnToEyeEnvelope, EyeCommand and TextMessage classes.

	* Glasses/EyeInfo.cxx:
	* Glasses/EyeInfo.h:
	Add EyeInfoVector member for sending special rays to *the* Eye.
	Add custom ray qunatum numbers.
	Add proteted set_eye(Eye*) so that operation can be properly locked.
	Rewrite Message/Warning/Error to send rays.

	* GledView/FTW_Shell.cxx:
	* GledView/FTW_Shell.h:
	Make shell menus clearer.
	White space.

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	Move constructors to src file.
	Add destructor.

	* Gled/GledNS.h:
	Remove Saturn->Eye message types (were commented out already).

	* Glasses/ZGlass.h:
	* Stones/ZComet.cxx:
	Gray space.

	* Glasses/ZSunQueen.cxx:
	White space.

2010-10-17  Matevz Tadel  <matevz.tadel@ijs.si>

	Only deliver Rays to Eyes that actaully observe given Queen.

	* Ephra/EyeInfoVector.cxx:
	* Ephra/EyeInfoVector.h:
	New class - ref-counted vector of EyeInfo* passed from Queen to
	Saturn for Ray emission.

	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Associate EyeInfoVector with each Ray in ray-queue.
	Argument also added to Shine().

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	Use EyeInfoVector for mObservers.
	Clone the mObservers vector when an eye is added/removed.

	* Gled/GledOperatorDefs.h:
	New file: move the execution defines out of Operator.h.

	* Glasses/Operator.h:
	Move the execution defines into new file Gled/GledOperatorDefs.h.
	Less header files need to be included this way.

	* Ephra/Forest.cxx:
	* Ephra/Forest.h:
	Removed files -- has not been used in a long time.

	* Eye/Eye.cxx:
	* Eye/OptoStructs.cxx:
	* Glasses/AList.cxx:
	* Glasses/Eventor.cxx:
	* Glasses/Eventor.h:
	* Glasses/EyeInfo.h:
	* Glasses/PerfMeterOperator.cxx:
	* Glasses/PerfMeterOperator.h:
	* Glasses/SaturnInfo.cxx:
	* Glasses/SaturnInfo.h:
	* Glasses/SaturnObserver.cxx:
	* Glasses/SaturnObserver.h:
	* Glasses/ZFireQueen.cxx:
	* Glasses/ZGlass.cxx:
	* Glasses/ZIdentity.cxx:
	* Glasses/ZIdentity.h:
	* Glasses/ZIdentityFilter.cxx:
	* Glasses/ZIdentityFilter.h:
	* Glasses/ZIdentityListFilter.cxx:
	* Glasses/ZIdentityListFilter.h:
	* Glasses/ZKing.cxx:
	* Glasses/ZMEESelfFilter.cxx:
	* Glasses/ZMEESelfFilter.h:
	* Glasses/ZMirEmittingEntity.h:
	* Glasses/ZMirFilter.cxx:
	* Glasses/ZMirFilter.h:
	* Glasses/ZSunQueen.cxx:
	* GledView/FTW.cxx:
	* GledView/FTW_Branch.cxx:
	* GledView/FTW_Shell.cxx:
	* GledView/GledGUI.cxx:
	Reduce number of includes in some header files substituting them
	with forward declarations.
	Add missing includes where they are required.

2010-10-03  Matevz Tadel  <matevz.tadel@ijs.si>

	Optimize Saturn-Eye communication: send simple envelopes directly
	without creation of TMessages.

	The envelope struct SaturnToEyeEnvelope is defined in RayNS.

	Use message type InfoStream_e from GledTypes.h also on the Eye.

	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Send SaturnToEyeEnvelope to Eyes, not TMessage.

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	Receive SaturnToEyeEnvelope not a TMessage.
	As this is really short and the exact message length is known, we
	don't need to fear pre-fetching could get as only part of the
	message.
	Keep only Message(TString&, InfoStream_e) variant.

	* Eye/OptoStructs.h:
	Forward-declare Ray.

	* Eye/Ray.cxx:
	* Eye/Ray.h:
	Add struct SaturnToEyeEnvelope holding minimal needed data.
	Move in Saturn->Eye message types from GledNS to RayNS.
	Use InfoStream_e for TextMessage.
	Remove obsolete Get/Put[Any]PTR functions.

	* Glasses/EyeInfo.cxx:
	* Glasses/EyeInfo.h:
	* Glasses/ZMirEmittingEntity.h:
	* Gled/GledNS.h:
	Move Saturn->Eye message types to Ray.h.

	* Gled/GledTypes.h:
	Add info-stream type name-arrays.

	* GledView/FTW.cxx:
	* GledView/FTW_Branch.cxx:
	* GledView/FTW_Nest.cxx:
	* GledView/FTW_Shell.cxx:
	* GledView/FTW_Shell.h:
	* GledView/MCW_View.cxx:
	* GledView/MTW_MetaView.cxx:
	Update to use the new Eye::Message() prototype.

2010-09-29  Matevz Tadel  <matevz.tadel@ijs.si>

	Optimize Ray passing: pass pointers instead of streaming, use unix
	sockets instead of inet connection to localhost.

	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Add method
	  TSocket* MakeSocketPairAndAccept(const TString& name);
	that creates unix socket pair, accepts connection on one end and
	returns the second end wrapped in TSocket.

	In ray_emitter() set reference count of ray and stream pointer to
	ray to Eyes. Delete it if there are no Eyes to be notified.

	White-space changes.

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	Add members for current ray and demangled alpha/beta/gamma images.
	Modify for receiving of Ray pointers and their proper management
	via reference counting.

	* Eye/Ray.cxx:
	* Eye/Ray.h:
	Remove serialization code.
	Remove Eye-local alpha/beta/gamma images.
	Add spin-lock and reference counting.
	Modify custom buffer creation and access so that it can be shared
	between several concurrent threads.

	* Glasses/PupilInfo.cxx:
	* Pupils/Pupil.cxx:
	Use new Ray custom-buffer functions.

	* GledView/FTW_Branch.cxx:
	* GledView/FTW_Shell.cxx:
	Access beta/gamma images via Eye (removed from Ray).

	* GledView/GledGUI.cxx:
	Create Eye-Saturn sockets via Saturn::MakeSocketPairAndAccept().

	* Glasses/ScreenText.h:
	* Glasses/WGlButton.h:
	* Rnr/GL/ScreenText_GL_Rnr.cxx:
	* Rnr/GL/WGlButton_GL_Rnr.cxx:
	Add get-string-by-reference P7 pragmas.

	* Glasses/ZSunQueen.cxx:
	* Gled/GSpinLock.h:
	* Stones/ZMIR.cxx:
	White-space.

2010-09-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Add ZTrans wrappers UnitTrans() and UnitRot().

2010-09-12  Matevz Tadel  <matevz.tadel@ijs.si>

	* GledView/MCW_View.cxx:
	Do not set range for argument value weed if its default value is
	smaller than the anticipated step.

2010-08-06  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GThread.cxx:
	On mac ifdef out getcontext call -- it causes weirdness.

2010-07-26  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/Gled.cxx:
	Disable automatic adding of histogram objects to current ROOT
	directory.

2010-07-25  Matevz Tadel  <matevz.tadel@ijs.si>

	* Stones/HTrans.h:
	Add HPoint::operator/=(TT) and operator/(HPoint, TT).

2010-07-05  Matevz Tadel  <matevz.tadel@ijs.si>

	* RnrBase/A_Rnr.h:
	Add templated RnrModStoreT to avoid casting in renderers.
	Reorder members of RnrMod and RnrModStore by size.

2010-07-04  Matevz Tadel  <matevz.tadel@ijs.si>

	Really fix MTW_View destruction.
	The problem was that it was coming from two directions (ZGlassImg
	or Fl_Window destruction) and so both window ownership and
	FTW_Shell management of the views failed.

	* GledView/FTW_Shell.cxx:
	* GledView/FTW_Shell.h:
	Spawn Class/MetaView functions now return MTW_Class/MetaView
	pointers, not Fl_Window (as the MTW object must be destroyed).
	The internal transient hash also holds pointers to MTW objects.
	Replace DitchMTW_View() with UnregisterMTW_View() that is called
	from the MTW_View destructor when the view is flagged as managed.

	* GledView/MTW_View.cxx:
	* GledView/MTW_View.h:
	Add flag bManaged -- if it is set, FTW_Shell is notified about
	view destruction.
	Add protected method set_window() -- if window exists it
	connects callback that destroys the view (not window!) when the
	window is closed (window-manager close or Esc shortcut). The
	window itsels gets destroyed via a timer with zero timeout.

	* GledView/MTW_ClassView.cxx:
	* GledView/MTW_MetaView.cxx:
	Assign window to base-class via protected set_window().

2010-07-03  Matevz Tadel  <matevz.tadel@ijs.si>

	Improve XT canvas request, add pad-update request.

	* Gled/XTReqCanvas.cxx:
	* Gled/XTReqCanvas.h:
	Add static XTReqCanvas::Request() convenience function.
	Add new class XTReqPadUpdate to request update of a pad.

2010-07-03  Matevz Tadel  <matevz.tadel@ijs.si>

	Instantiate TThread with GThread to allow broken ROOT's TSD
	implementation to work properly.

	* Gled/GThread.cxx:
	* Gled/GThread.h:
	Instantiate / delete TThread representation in spawner / reaper
	functions.
	Provide extra ClearRootTThreadRepresentation() method to allow
	Rint thread to delete it instantly (as root does not want TThread
	to exist for its "main" thread).

	* Gled/Gled.cxx:
	Destroy TThread for Rint thread early in Rint spawner function.

2010-07-03  Matevz Tadel  <matevz.tadel@ijs.si>

	Add support for handling of arbitrary cross-thread requests into
	Rint thread.

	* Gled/TRootXTReq.cxx:
	* Gled/TRootXTReq.h:
	New class for handling of cross-thread requests into the Rint
	thread.

	* Gled/XTReqCanvas.cxx:
	* Gled/XTReqCanvas.h:
	Cross-thread request for creation of a new TCanvas.

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	Activate TRootXTReq singals/queues in Rint thread spawner.
	Remove function NewCanvas().

	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	Remove function NewCanvas().

2010-07-03  Matevz Tadel  <matevz.tadel@ijs.si>

	Improve cancellation of dedicated MIR execution threads.

	* Gled/GThread.cxx:
	* Gled/GThread.h:
	Add flag allowing to detach an otherwise joinable thread on exit
	from the thread function.
	Add additional static lock for synchronization of detach-state
	requests and queries.
	Add static method Yield() that pushes the calling thread to the
	end of thread execution queue.

	* Ephra/Saturn.cxx:
	Properly implement cancellation / handling of dedicated MIR
	execution threads by using the new detach-on-exit capability in
	GThread.

2010-06-27  Matevz Tadel  <matevz.tadel@ijs.si>

	Rewrite signal handling to support proper per-thread signal
	handlers. And more ...

	* Gled/GThread.cxx:
	* Gled/GThread.h:
	Add members for controlling per-thread signal handlers.
	Add exit policy on terminal signal -- just exit thread or call
	Gled::Exit() or do system exit.
	Add static functions for signal handling control.

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	Unblock relevant signals for Rint thread, set terminal policy.
	Add static exit status to allow its communication from signal
	handling to final exit in gled/saturn main functions.
	Remove gGled global, Gled::theOne is used everywhere.

	* Gled/GTime.cxx:
	* Gled/GTime.h:
	Add flags for control over handling of premature timeout in
	SleepMiliSec().

	* Ephra/Mountain.cxx:
	* Ephra/Mountain.h:
	Use new signal handler functions in GThread.
	When Eventor requests trapping of terminal signals do not exit the
	thread -- reenter the event loop instead.

	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Use new signal handler functions in GThread.

	* Glasses/Eventor.cxx:
	Uncomment return statement that prevent re-calling of Start/Stop
	and Suspend/Resume when eventor thread is already in desired
	state.

	* gled.cxx:
	Use exit status from Gled.

	* saturn.cxx:
	Use exit status from Gled.
	Stop Rint thread by sending SigTERM (as done in gled).

	* catalog.patch:
	Remove dict request for gGled global.

	* Stones/ZTrans.h:
	Add SetBaseVec() with ZPoint as argument. CINT didn't manage
	without that.

	* macros/demo_scene_elements.C:
	Use ZPoint instead of TVector3.

2010-06-20  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GTime.h:
	Add bool functions Is/IsNotZero().

2010-06-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GTime.h:
	Add conversion function Float_t ToFloat().

2010-06-12  Matevz Tadel  <matevz.tadel@ijs.si>

	* GledView/GledGUI.cxx:
	Fix root canvas creation.

	* GledView/MTW_ClassView.cxx:
	Put back code for enclosing window destruction, apparently removed
	by mistake.

2010-06-11  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/PupilInfo.cxx:
	Bugfix in Home() -- missing break in switch statement.

2010-06-11  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/Gled.cxx:
	Add sig-child signal handler. Does nothing so far.

2010-05-30  Matevz Tadel  <matevz.tadel@ijs.si>

	Fixes for mac build.

	* Gled/GSpinLock.h:
	* Gled/GSpinLock.cxx:
	Use BSD OSSpinLock on mac, pthreads do not have spin-locks there.

	* Pupils/Pupil.cxx:
	Work around psychological problems of mac's gcc.

	* Makefile:
	Get freetype include path from freetype-config.

2010-05-02  Matevz Tadel  <matevz.tadel@ijs.si>

	Improve MTW_ClassView handling in FTW_Shell to avoid holding on
	ZGlassImgs for too long.

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	Remove 'MTW_View *fFullMTW_View' member of ZGlassImg. Caching of
	full views can lead to indefinite queen observation.

	Extend class ZGlassImgHandle to allow re-setting of glass-image.

	* GledView/FTW.cxx:
	Add function:
	  void delayed_destroy_window(Fl_Window* win);
	that destroys passed window via zero-delay timeout.
	Usefull for deleting windows in callbacks or handle method.

	* GledView/FTW_Shell.cxx:
	* GledView/FTW_Shell.h:
	Change handling of full class views. Instead of holding a set of
	them and using a member in ZGlassImg, handle them internally via a
	map<ZGlassImg*, FTW_Window*>.

	Also, delete them as soon as possible to avoid holding on to an
	image when it is not really needed. This is done by installing a
	custom callback to enclosing FTW_Window.

	Use FTW_Window instead of plain Fl_Window for enclosing
	MTW_ClassViews -- this allows for proper un-registration of
	Fl_SWM_Clients.

	SpawnXyzzView() methods now return FTW_Window*. Full arguments
	must always be specified (no defaults).

	* GledView/FTW_Window.cxx:
	* GledView/FTW_Window.h:
	Do not self-resize by default.
	Add the second Fl_Window constructor with x, y coords.

	* GledView/FltkGledStuff.cxx:
	* GledView/FltkGledStuff.h:
	* GledView/MTW_ClassView.cxx:
	* GledView/MTW_ClassView.h:
	Do not delete enclosing window when destructing. This is very
	counter-intuitive.

	* GledView/FTW_Nest.cxx:
	* Pupils/GuiPupil.cxx:
	FTW_Window not self-resizable by default anymore.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Use ZGlassImgHandle instead of raw ZGlassImg pointers.

	* Rnr/GL/GLRnrDriver.cxx:
	Calculate mouse-ray vectors only on mouse events.

2010-05-02  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZQueen.cxx:
	Document non-used member 'QueenState_e mState'.
	Set it consistently at least for non-mirrored queens.

2010-05-01  Matevz Tadel  <matevz.tadel@ijs.si>

	Auto-destruct non-used ZGlassImgs on the Eye.

	* Glasses/AList.h:
	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	New virtual function:
	  AList* AsAList();

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	New function:
	  void PrintObservedLenses(Bool_t dump_views);

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	Add additional reference counting of ZGlassImgs.
	Register those into special set in Eye and process them at the end
	of Manage().

	* GledView/FTW.cxx:
	* GledView/FTW_Ant.cxx:
	* GledView/FTW_Ant.h:
	* GledView/FTW_Leaf.cxx:
	* GledView/FTW_Leaf.h:
	* GledView/FTW_Shell.cxx:
	* GledView/FTW_Shell.h:
	* GledView/FltkGledStuff.cxx:
	* GledView/FltkGledStuff.h:
	* GledView/MTW_ClassView.cxx:
	* GledView/MTW_View.cxx:
	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* RnrBase/A_Rnr.cxx:
	* perllib/GLED_GledCore_Widgets.pm:
	Follow up on changes in OptoStructs.

2010-04-25  Matevz Tadel  <matevz.tadel@ijs.si>

	First step towards direct, targeted Ray delivery: let Queens
	know which Eyes are observing them.

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	Add map<ZQueen*, int> member to count number of images for any
	given queen -- notify queens when an eye starts/stops observing them.

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	Make ZGlassImg::CheckIn/OutView() non-inline.
	In CheckOutView() auto-destruct image unless in destruction already.

	* Glasses/EyeInfo.cxx:
	* Glasses/EyeInfo.h:
	Make class Eye a friend.
	Add private local member 'Eye *hEye'.

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	Add mutex mRayMutex to lock future ray operations.
	Add functions Add/RemoveObserver() used by Eyes to notify about
	start/end of observation.
	Add function PrintEyeConnections() that lists all Eyes observing
	this queen and number of lenses that have images.

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	Use TString& instead of char* for SpawnEye() arguments.

	* Stones/HTrans.cxx:
	* Stones/HTrans.h:
	Use std::ostream, GledTypes.h are not included when PCHs are not used.

	* Glasses/ShellInfo.cxx:
	* GledView/FTW_Shell.cxx:
	Grayspace.

2010-04-18  Matevz Tadel  <matevz.tadel@ijs.si>

	Add spinlock wrapper, remove all virtuals from GMutex and
	subclasses.

	* Gled/GSpinLock.cxx:
	* Gled/GSpinLock.h:
	New files - wrapper for posix spinlock.

	* Gled/GMutex.cxx:
	* Gled/GMutex.h:
	Do not store initial mutex attribs, they are never used.

	Use ClassDefNV, make destructor non-virtual.
	GMutex and sub-classes are never used in polymorphic contexts.

	* Gled/GCondition.h:
	* Gled/GSelector.h:
	Use ClassDefNV, make destructor non-virtual..

	* Gled/GTime.h:
	Whitespace.

2010-04-11  Matevz Tadel  <matevz.tadel@ijs.si>

	Fix display of rotation angles in ZNode-weed.
	This became inconsistent as Cardan-angle caching got removed from
	ZTrans.

	* Stones/HTrans.cxx:
	Fix calculation of phi angle when theta is +-90deg.

	* FL/Fl_TransCtrl.cxx:
	* FL/Fl_TransCtrl.h:
	Do not update the rotation angle widget while a valuator is being
	dragged.

2010-04-06  Matevz Tadel  <matevz.tadel@ijs.si>

	Unify usage / implementation of matrix and point classes.
	Sub-class ZTrans from HTrans<Double32_t>.
	Sub-class ZPoint from HPoint<Double32_t>.
	Get rid of TVector3 everywhere.

	* Stones/HTrans.cxx:
	* Stones/HTrans.h:
	Template HPoint and add many useful functions.

	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	Wipe implementation -- derive from HTrans<Double32_t>.
	Add class ZPoint.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	* Pupils/Pupil.cxx:
	* Rnr/GL/GLRnrDriver.cxx:
	* Rnr/GL/GLRnrDriver.h:
	Replace usage of TVector3 with ZPoint.

	* catalog.patch:
	Add pragmas for new classes in HTrans and ZTrans.

	* perllib/GLED_GledCore_Widgets.pm:
	Move in HPointF weed from Var1 and extend for HPointD and ZPoint.

2010-04-04  Matevz Tadel  <matevz.tadel@ijs.si>

	Move HTrans in from Var1.

	* Stones/HTrans.cxx:
	* Stones/HTrans.h:
	Moved in from Var1/Stones.

	* catalog.patch:
	Add HTrans entries.

2010-03-24  Matevz Tadel  <matevz.tadel@ijs.si>

	Use FTGL for font rendering -- uses true-type fonts.
	Wipe old implementation in GLTextNS using txf fonts.

	So far only texture fonts are properly supported (that was the
	only mode supported by the old implementation) even though this
	will change soon.

	This requires update of root as FTGL there has been hacked to
	provide fading of text beyond certain width.

	* Glasses/ScreenDumper.h:
	* Glasses/ScreenText.cxx:
	* Glasses/ScreenText.h:
	* Glasses/WGlDirectory.cxx:
	* Glasses/WGlFrameStyle.cxx:
	* Glasses/WGlFrameStyle.h:
	* Glasses/ZRlFont.cxx:
	* Glasses/ZRlFont.h:
	* Makefile:
	* Rnr/GL/GLTextNS.cxx:
	* Rnr/GL/GLTextNS.h:
	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/Text_GL_Rnr.cxx:
	* Rnr/GL/WGlButton_GL_Rnr.cxx:
	* Rnr/GL/WGlButton_GL_Rnr.h:
	* Rnr/GL/WGlDirectory_GL_Rnr.cxx:
	* Rnr/GL/WGlDirectory_GL_Rnr.h:
	* Rnr/GL/WGlFrameStyle_GL_Rnr.cxx:
	* Rnr/GL/WGlFrameStyle_GL_Rnr.h:
	* Rnr/GL/WGlValuator_GL_Rnr.cxx:
	* Rnr/GL/WGlValuator_GL_Rnr.h:
	* Rnr/GL/ZRlFont_GL_Rnr.cxx:
	* Rnr/GL/ZRlFont_GL_Rnr.h:
	* Rnr/GL/ZRnrModBase_GL_Rnr.h:
	* Stones/ZColor.cxx:
	* Stones/ZColor.h:
	Various changes required for transition to FTGL.

2010-01-30  Matevz Tadel  <matevz.tadel@ijs.si>

	Fix rendering of explosions on mac.

	* Rnr/GL/GLRnrDriver.cxx:
	Move glu-quadric initialization into BeginRender.
	OSX apparently requires that glu objects to be created in a valid
	gl context.

2010-01-24  Matevz Tadel  <matevz.tadel@ijs.si>

	* FL/Fl_SVars.cxx:
	* FL/Fl_SVars.h:
	Add FL-weed Fl_SInertVar - in fact it just sub-classes Fl_SMinMaxVar.

	* Pupils/Pupil.cxx:
	Use SetWidthHeight() from RnrDriver.
	Invert direction of zoom on mouse-wheel.

	* Rnr/GL/GLRnrDriver.cxx:
	* Rnr/GL/GLRnrDriver.h:
	Add two default glu-quadric objects: mQuadricStd and
	mQuadricStdNoNormals.

	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Add member mAspect and mTanHalfZFov.
	Replace auto-generated setters for Width, Height and ZFov with
	hand-written ones to also calculate dependent variables.

	* Stones/SVars.h:
	Add the following functions:
	  T SInertVar::DeltaMax(Int_t sign, T dt);
	  T SDesireVar::DeltaDesireMax(Int_t ifac, T dt) const;
	that make the maximal allowed step of value / desire.

	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	Add function for checking if rotation matrix is valid:
	  Bool_t CompareAngles(Float_t a1, Float_t a2, Float_t a3) const;
	This only works if it is set via SetRotByAngles().

	* perllib/GLED_GledCore_Widgets.pm:
	Add weed for InertVar inheriting from MinMaxVar.
	Make DesireVar inherit from InertVar.

2010-01-20  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	* Glasses/ZIdentity.cxx:
	* Glasses/ZQueen.cxx:
	Move glass-bits from extern vars in namespace ZGlassBits to Bits_e
	enum in ZGlass.

	* perllib/GLED_GledCore_Widgets.pm:
	Honour -const member in sub make_var_widget_cb.

2010-01-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* Pupils/Pupil.cxx:
	Set blend funcion/euation even if blending is disabled.

	* Rnr/GL/ZGlass_GL_Rnr.h:
	Add GL_Boolean_Holder class.

2010-01-11  Matevz Tadel  <matevz.tadel@ijs.si>

	Add utility function assign_link().

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	Add protected, templated assign_link() function to reduce code in
	AdEnlightenment().

	Add protected queen_check_in() so that ZGlass.h does not have to
	include ZQueen.h.

2010-01-09  Matevz Tadel  <matevz.tadel@ijs.si>

	* Stones/SVars.h:
	Add member mStdDesireDelta to SDesireVar.

2010-01-09  Matevz Tadel  <matevz.tadel@ijs.si>

	* Stones/SVars.h:
	SInertVar now takes two delta limits - one for increasing and
	another for decreasing of absolute value of the variable.

2010-01-03  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	Use SigINT to interrupt select thread instead of SigUSR2.
	SigUSR2 caused phony error message on OSX.

2010-01-01  Matevz Tadel  <matevz.tadel@ijs.si>

	* macros/mac_hack.C:
	Removed obsolete file - the real problem was too small stack size.

2010-01-01  Matevz Tadel  <matevz.tadel@ijs.si>

	Make sure TRint thread has at least 8MB of stack. It didn't on OSX.

	* Gled/GThread.cxx:
	* Gled/GThread.h:
	Add static data-member 'int sMinStackSize' and data member 'int
	mStackSize'. The static one is initialized to zero first and the
	non-static is initialized to the values of the static one in
	constructor.
	If mStackSize is non-zero in Spawn() function and the default
	stack size is below its value the stack-size is increased for the
	spawning thread.

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* gled.cxx:
	* saturn.cxx:
	Move common TRint-thread spawning code from gled.cxx and
	saturn.cxx to class Gled.
	Make sure TRint thread runs with at least 8MB of stack.

2009-12-30  Matevz Tadel  <matevz.tadel@ijs.si>

	Add support for user libset shutdown functions.
	The same naming conventions apply as for user libset init
	functions.

	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	Add the following functions namespace GledNS:
	  void  ShutdownLibSet(const TString& lib_set);
	  void  ShutdownLibSets();
	  TString FabricateUserShutdownFoo(const TString& libset);
	In InitSoSet() push the newly initialized libset to a global list
	'LibSetList' of initialized libsets. GledCore is not in this list.

	Beautify code somewhat.

	* Gled/Gled.cxx:
	Call GledNS::ShutdownLibSets() at the end of shutdown thread
	function.

2009-12-29  Matevz Tadel  <matevz.tadel@ijs.si>

	* macros/mac_hack.C:
	Remove extra libset loading - this was solved by renaming libset GTS
	to GledGTS.

2009-12-25  Matevz Tadel  <matevz.tadel@ijs.si>

	Fixes for OSX build and running.

	* Ephra/Mountain.cxx:
	Define _XOPEN_SOURCE on osx. Otherwise some functions from
	ucontext.h do not get exported.

	* macros/mac_hack.C:
	Hackish macro that attempts to bypass issues with CINT and dynamic
	library loading on osx.

2009-12-25  Matevz Tadel  <matevz.tadel@ijs.si>

	Fixes for OSX build.

	* Pupils/Pupil.cxx:
	ifdef __APPLE__ was badly mis-spelled.

2009-12-22  Matevz Tadel  <matevz.tadel@ijs.si>

	Sanitize GL variable holder/switch classes.

	* Rnr/GL/ZGlass_GL_Rnr.h:
	Add GL_Int_Holder and GL_Enum_Holder.
	Move all the holder/switch classes out of ZGlass_GL_Rnr class.

2009-12-22  Matevz Tadel  <matevz.tadel@ijs.si>

	Run Gled termination in a dedicated thread.

	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Protect against Shotdown() being called twice.
	Initialize most members in constructor.
	White-space.

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	When Exit() is called, spawn a dedicated thread that calls
	virtual ExitVirtual().

	* Glasses/WGlButton.h:
	Tag ExitGled() as local.

2009-12-20  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlass.cxx:
	Add handling of MC_IsDetached bit to suggest_MIR_presence().

2009-12-17  Matevz Tadel  <matevz.tadel@ijs.si>

	* Stones/ZColor.cxx:
	* Stones/ZColor.h:
	* Stones/ZColorMark.cxx:
	* Stones/ZColorMark.h:
	Use ClassDefNV (non-virtual) to reduce memory size.
	Add some docs.
	White-space changes.

2009-12-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* Pupils/Pupil.cxx:
	Forgot to call valid(1) in handling of PRQN_redraw.
	Move handling of basic events (enter/leave/show/hide) to the top.

2009-12-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZQueen.cxx:
	Change order of lens disentanglement in put_lens_to_purgatory() -
	first remove references to lens and later references from the lens
	that is being redeemed.

	* Rnr/GL/WGlValuator_GL_Rnr.cxx:
	Always check if link to alpha lens is set.

	* Rnr/GL/ZGlass_GL_Rnr.h:
	Add defines for obtaining values of links that can be potentially
	zero.

2009-12-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* RnrBase/PMSEntry.cxx:
	* RnrBase/PMSEntry.h:
	Add some docs. White-space.

2009-12-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Fix handling of leave/enter events. In particular, X sends fake
	events on button press as grabbing is on. Needed to access
	directly the X event to detect that (properly if-defed).
	Set  Fl_Event::fIsOverlay when doing overlay handling.
	Remove unused member mBelowMouseImg.

	* RnrBase/A_Rnr.h:
	Add member fIsOverlay to struct Fl_Event.

2009-12-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlPerspective.cxx:
	In ortho modes use 0, 1 for near, far (instead of -1, 1).

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Add zmin/max output args to PickTopNameStack().

	* RnrBase/A_Rnr.h:
	Add fZMin/Max members to struct Fl_Event.

2009-12-12  Matevz Tadel  <matevz.tadel@ijs.si>

	Fix stereo rendering for all camera orientations.

	* Glasses/PupilInfo.cxx:
	Put zero-parallax plane at near clipping distance by default.

	* Pupils/Pupil.cxx:
	Properly displace camera by left/right vector from absolute camera
	transformation.

2009-12-11  Matevz Tadel  <matevz.tadel@ijs.si>

	Add support for stereo rendering.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Add members for controlling stereo rendering:

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Add new function rnr_stereo().
	Slightly modify rnr_standard() so that fake-overlay gets
	rendered within it.
	Add members for frustum limits needed for setting of left/right
	camera/perspective parameters and set them up in SetProjection().

	* GledView/GledGUI.cxx:
	Add command-line option -stereo - this makes stereo GL visuals the
	default.

2009-12-10  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/Camera.cxx:
	* Glasses/Camera.h:
	Add member ZTrans mHomeTrans.
	Add functions Identity(), SetHomeTrans(), ResetHomeTrans().
	This allows to set home position of the camera.

2009-12-10  Matevz Tadel  <matevz.tadel@ijs.si>

	Fix problem with resizing of Pupils.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	After receiving a PRQN_redraw ray manually call draw(). This
	prevents a lock-up in tringula demo when the window is made
	smaller with the window-manager controls.
	This is uber weird.

	Change inheritance order -- make Fl_Gl_Window the primary base.

2009-11-29  Matevz Tadel  <matevz.tadel@ijs.si>

	Stop detached threads during Saturn shutdown.

	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Add protected method stop_detached_threads().
	Call it during Saturn shut-down.

2009-11-28  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	Add MC_IsDetached bit to MirComponents_e and handle it in
	assert_MIR_presence().

	* Glasses/PupilInfo.cxx:
	Rewrite ToPupilFrame(ZNode*) to use a set of top-level nodes and
	check it when going up following the parent links.

	* Pupils/Pupil.cxx:
	Do not hold the PupilInfo read-lock throughout SetAbsRelCamera().
	Beautify it.

	Remove double RQN_link_change check in AbsorbRay().
	Beautify it.

2009-11-27  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Add function:
	  Bool_t TransformMouseRayVectors(ZNode* ref, TVector3& pos, TVector3& dir)
	that transforms mouse-ray vectors into given frame.

	Add data-members Int_t mMouseDragDX, mMouseDragDY.

	* Rnr/GL/GLRnrDriver.cxx:
	* Rnr/GL/GLRnrDriver.h:
	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	Rename data-members mMDrgDX/Y to mMDragDX/Y;

2009-11-21  Matevz Tadel  <matevz.tadel@ijs.si>

	Extensions for incarnation of proto Spiritios.

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	Add function ZGlassImg::DumpLinkData() to simplify debugging of
	registered link data.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Use L{f} pragma for links mOverlay and mEventHandler. Thus
	sub-classes can restrict the FID of assigned lenses.

	Add local members holding last-render (cam-fix-trans, true window
	widt and height) and last-event (mouse pos, ray vectors defined by
	the mouse position) info. These are copied in by the
	PupilInfo_GL_Rnr.

	* Glasses/ZGlPerspective.cxx:
	* Glasses/ZGlPerspective.h:
	Add new ViewMode_e entry, VM_OrthoTrueAspect, to make it easy to
	define "square" coordinate systems (where unit in horizontal and
	vertical direction has the same lenght). Add function:
	  void StandardTrueAspect(); // X{E}
	to make it easy to setup.

	* Glasses/ZHashList.cxx:
	* Glasses/ZHashList.h:
	Add functions:
	  virtual void MoveToFront(ZGlass* lens); // X{E} C{1}
	  virtual void MoveToBack (ZGlass* lens); // X{E} C{1}
	They allow easy movement of lenses in the list.

	Improve some element handling functions (don't use unnecessary
	temporary iterators.).

	Beautify layout.

	* Glasses/ZNameMap.cxx:
	Improve class-docs.

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Add function:
	  void AddRnrMod(ZGlass* el); // X{E} C{1}
	to simplify adding of a rnr-mod.

	* Gled/GTime.h:
	Add version of ToMiliSec() taking max-time argument:
	  ULong_t ToMiliSec(Long_t max);

	* Gled/GledNS.cxx:
	* Gled/GledTypes.h:
	Add Exc_t operator+(const Exc_t &s1, char c).

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Call PupilInfo_GL_Rnr::InitRendering() at the start of Render().

	Call RnrDriver::PreEventHandling() and PupilInfo_GL_Rnr::Hanlde()
	before doing any other event handling.

	Beautify layout.

	* Rnr/GL/GLRnrDriver.cxx:
	* Rnr/GL/GLRnrDriver.h:
	Add:
	  void  PreEventHandling(A_Rnr::Fl_Event& e)
	that copies some event data into local variables.

	Add members to store position of mouse, positions at last button
	press for each button, last drag dx/dy and mouse ray vectors.

	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/PupilInfo_GL_Rnr.h:
	Add:
	  virtual void InitRendering(RnrDriver* rd);
	  virtual int  Handle(RnrDriver* rd, Fl_Event& ev);
	They copy some data to the lens side.

	* Rnr/GL/ZGlPerspective_GL_Rnr.cxx:
	* Rnr/GL/ZGlPerspective_GL_Rnr.h:
	Add handling of view-mode VM_OrthoTrueAspect.

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	Bug-fix in passing event to list elements (extra ; after if).

	* RnrBase/A_Rnr.h:
	Add bool fIsKey to A_Rnr::Fl_Event.

	* Stones/SVars.h:
	SDesireVar: add methods DesireToValue(), IsAbove/BelowDesire().

	Make mDesire and bDesireSatisfied mutable to achieve const
	correctness.

	* perllib/GLED_GledCore_Widgets.pm:
	Add sub make_step() to package Widget - it calls only
	Fl_Valuator::step(), assuming min/max are set from elsewhere.

	Use this in Widgets::DesireVar - min/max are stored in the SVar.

2009-10-17  Matevz Tadel  <matevz.tadel@ijs.si>

	Pupil / GL event handling changes.

	* Pupils/Pupil.cxx:
	Fix sporadic occurance of key-up events when key is
	auto-repeating. This requires a trip back to X ... but still
	better than unexpected key events coming in.

	White-space.

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* Rnr/GL/ZGlass_GL_Rnr.h:
	Implement virtual Handle() from A_Rnr.
	Check if lens is list and try delivering the event to all
	elements. This can be done here as ZGlassImg already has all the
	information.
	Remove method GetGlass() - apparently it was not used.

	White-space.

	* RnrBase/A_Rnr.h:
	Rename inner class NameStack_Entry to NameStackEntry.

	White-space.

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	* RnrBase/RnrDriver.h:
	* Rnr/GL/GLRnrDriver.h:
	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/PupilInfo_GL_Rnr.h:
	White-space.

2009-10-11  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/PerfMeterTarget.h:
	In Xport pragma replace '[ref]' by 'Q' (changed in p7).

	* Gled/GledNS.h:
	Add member 'MethodInfo *fDeltaMethod' to DataMemberInfo.
	Somewhat beautify.

	* GledView/FTW_Shell.cxx:
	In context menu also put delta-method under "Set methods".

	* catalog.patch:
	Add pragmas for stones declared in SVars.h: SMinMaxVar, SInertVar,
	SDesireVar and SExpDesireVar.

	* Stones/SVars.cxx:
	* Stones/SVars.h:
	* FL/Fl_SVars.cxx:
	* FL/Fl_SVars.h:
	New stones for ranged (SMinMaxVar), step-limited (SInertVar)
	and value-converging (SDesireVar, SExpDesireVar(not
	implemented)) variables.
	Fl classes that go with them.

	* perllib/GLED_GledCore_Widgets.pm:
	Add weeds MinMaxVar and DesireVar.

2009-08-16  Matevz Tadel  <matevz.tadel@ijs.si>

	Preliminary mac support for handling of some terminal
	signals (ILL, BUS, SEGV and FPE) in Eventor/Mountain threads.

	* Ephra/Mountain.cxx:
	Add ifdefs for mac - this seems uber weird and there are no docs
	anywhere other than for ppc.

2009-08-14  Matevz Tadel  <matevz.tadel@ijs.si>

	Add support for handling of some terminal signals (ILL, BUS, SEGV
	and FPE) in Eventor/Mountain threads.

	For FPE only trap on FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW.

	This will require another pass to work on mac.

	* Ephra/Mountain.cxx:
	Use special class MountainThread : public GThread for running
	Eventors. MountainThread has additional members for signal
	handling.

	In DancerBeat() initialize signal handler as requested by Eventor
	flags.

	If signal is caught, notifiy Eventor via OnTerminalSignal() and
	terminate the thread.

	* Glasses/Eventor.cxx:
	* Glasses/Eventor.h:
	Add flags for specifying which signals to handle during execution:
	  Bool_t bTrapILL, bTrapBUS, bTrapFPE, bTrapSEGV;
	All disabled by default, use SetTrapAll() to enable all.

	Add virtual member function:
	  void OnTerminalSignal(Operator::Arg* op_arg, Int_t sid);
	that is called when one of the above signals is caught.

2009-07-14  Matevz Tadel  <matevz.tadel@ijs.si>

	Draw box so that shaders get correct vertex positions.

	* Rnr/GL/Box_GL_Rnr.cxx:
	Properly place corner vertices at coordinates as given by the mA,
	mB and mC size variables (scaling was used before).

2009-07-09  Matevz Tadel  <matevz.tadel@ijs.si>

	Changes required to support shaders.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Initialize GLEW from Pupil::draw(), not from the context-holder
	window.

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* Rnr/GL/ZGlass_GL_Rnr.h:
	Add function 'bool check_gl_error(const TString& msg)'.

	* macros/gl_defines.h:
	Add tokens for GL 1.4 and 1.5.
	Add selected tokens for GL 2.0.

2009-06-27  Matevz Tadel  <matevz.tadel@ijs.si>

	Rewrite socket selector handling.
	Due to changes is TSocket the file descriptor is not available
	after the other side has closed a connection.

	* Gled/GSelector.cxx:
	* Gled/GSelector.h:
	Reverse key-value roles in map that stores file descriptor to
	user-data (socket pointer) correspondence.
	Introduce helper struct GFdSet to encapsulate adding and removing
	of fd-set entries via Add/Remove() functions.

	* Ephra/Saturn.cxx:
	Adapt for changes in GSelector.

2009-06-25  Matevz Tadel  <matevz.tadel@ijs.si>

	Fix perl library path setup.

	* bin/gled-auth-genkeypair:
	* bin/gled-auth-init:
	Put extraction of $DATADIR into BEGIN block.

2009-06-21  Matevz Tadel  <matevz.tadel@ijs.si>

	Improve handling of fov, z-size and home-command in Pupil.

	* Glasses/CameraInfo.cxx:
	* Glasses/CameraInfo.h:
	Add data-members mDefZFov and mDefZSize.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Add data-members mDefZFov and mDefZSize.
	Add data-members mZoomFac, mMinZFov and mMaxZFov.
	Add method Home(Bool_t smooth).

	* Pupils/Pupil.cxx:
	When home key is pressed, call PupilInfo::Home() via MIR.
	Remove some old commented code.

2009-06-14  Matevz Tadel  <matevz.tadel@ijs.si>

	Make GuiPupil mostly work on mac.

	* Pupils/GuiPupil.cxx:
	Create pupil in-place instead of creating it as a top-level window
	and then swallowing it.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Add constructor taking x, y position.
	Restore Fl_Group::current() when creating gl_ctx_holder window.

2009-06-13  Matevz Tadel  <matevz.tadel@ijs.si>

	Rewrite sub-shell handling so that it might work on mac.

	* GledView/FTW_ShellClient.cxx:
	* GledView/FTW_ShellClient.h:
	* GledView/FTW_Window.cxx:
	* GledView/FTW_Window.h:
	New classes FTW_Window and FTW_ShellClient needed for
	generalization of FTW_SubShell concept.

	* GledView/FTW_SubShell.cxx:
	* GledView/FTW_SubShell.h:
	Add support for docking/undocking of sub-shells.
	Sub-class from FTW_ShellClient.

	* GledView/FTW_Shell.cxx:
	* GledView/FTW_Shell.h:
	Rewrite handling of sub-shells, especially docking/undocking.

	* GledView/FTW_Nest.cxx:
	* GledView/FTW_Nest.h:
	* Pupils/GuiPupil.cxx:
	* Pupils/GuiPupil.h:
	Do not sub-class from Fl_Window.
	Rewrite construction - create encompassing FTW_Window in static
	constructors and pass them into FTW_SubShell.
	Remove constructors taking x, y position.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Remove constructor taking x, y position.
	Let base-class handle hide/show events.

	* GledView/MCW_View.cxx:
	* GledView/MCW_View.h:
	* GledView/MTW_View.cxx:
	* GledView/MTW_View.h:
	Sub-class from FTW_ShellClient - this allows low-level GUI
	components from FltkGledStuff to find shell if they need it.
	
	* GledView/FltkGledStuff.cxx:
	In grep_shell(), search for FTW_ShellClient, not FTW_SubShell.

	* GledView/FTW_Branch.cxx:
	* GledView/FTW_Leaf.cxx:
	Small changes required by the stuff above.

	* Glasses/ShellInfo.cxx:
	Fixed SetDefSubShell() to support null argument.

2009-06-07  Matevz Tadel  <matevz.tadel@ijs.si>

	Sanitize inheritance scheme of MTW and MCW widget classes.

	* GledView/MCW_View.cxx:
	* GledView/MCW_View.h:
	* GledView/MTW_ClassView.h:
	* GledView/MTW_View.cxx:
	* GledView/MTW_View.h:
	Do not sub-class from FTW_SubShell - only some data-members were
	used and this introduced an unnecessary dependency.

	* GledView/MTW_SubView.cxx:
	* GledView/MTW_SubView.h:
	Subclass from Fl_Group directly - Fl_RelGroup will be removed from
	fltk-mt.

2009-05-17  Matevz Tadel  <matevz.tadel@ijs.si>

	Mac compilation changes.

	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	Fix compilation warnings - add virtual dtors for GuiThreadRequest
	classes.

	* gled.cxx:
	Do not initialize X-threads on mac.

2009-05-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* gled.cxx:
	Remove all traces of GUI thread-foo.

2009-05-15  Matevz Tadel  <matevz.tadel@ijs.si>

	Reshuffle bootstrap so that FLTK runs in main thread.

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	Process command-line arguments from within the TRint thread foo.
	Command-line argument-string list is now a member.
	Removed the '-norint' option - I suspect it wasn't really worjing
	before.

	* gled.cxx:
	Most of TRint related code moved to class Gled.
	Call GUI event-loop directly - do not create a new thread.

	* saturn.cxx:
	Most of TRint related code moved to class Gled.

2009-05-15  Matevz Tadel  <matevz.tadel@ijs.si>

	Add command-queue executed within the GUI event-loop.

	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	Add base-struct GuiThreadRequest and a queue containing the
	requests. They are executed within the main loop, in Run() method.
	Execution helper function is also available:
	  void exec_gui_thread_request(GuiThreadRequest* gtr);

	Rewrite SpawnEye() to use the command-queue instead of directly
	instantiating the Eye - and all the sub-shells.

2009-04-26  Matevz Tadel  <matevz.tadel@ijs.si>

	* Pupils/FBO.cxx:
	Do not include glew.h - done by glew.h.

	* Rnr/GL/Cylinder_GL_Rnr.h:
	* Rnr/GL/Sphere_GL_Rnr.h:
	Do not include glu.h - done by glew.h.

2009-04-18  Matevz Tadel  <matevz.tadel@ijs.si>

	Avoid FLTK issue with calling Pupil::handle() from another thread.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Add data-member 'GThread* mCreationThread' and only process
	handle() if called from the same thread.
	FLTK can call this quite unexpectedly when any Fl_Widget
	destructor is called in another thread.

2009-04-13  Matevz Tadel  <matevz.tadel@ijs.si>

	Formatting changes.

	* Rnr/GL/ZGlass_GL_Rnr.h:
	* Rnr/GL/ZNode_GL_Rnr.h:
	* RnrBase/A_Rnr.cxx:
	* RnrBase/A_Rnr.h:
	* RnrBase/RnrDriver.cxx:
	Formatting changes while trying to understand how render-bits
	really work for links to lists. Exactly as they should, it turns
	out.

2009-04-12  Matevz Tadel  <matevz.tadel@ijs.si>

	Change render-class determination and handling of L{aA} pragma.

	* Gled/GledNS.cxx:
	Change logic for determination of rendering class: find it at
	run-time, so that catalog generators don't need information about
	other libsets.

	Before empty render specification meant use 'ZGlass' renderer.
	Now it means take the first existing renderer in the glass
	hierarchy.
	
	* glass.list:
	Fix for new render-class specification

	* RnrBase/A_Rnr.cxx:
	* RnrBase/A_Rnr.h:
	Gray-space changes.

2009-04-07  Matevz Tadel  <matevz.tadel@ijs.si>

	Add support for enum info in Gled class catalogs.

	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	Add structures EnumEntry and EnumInfo.
	Add a list of EnumInfos to Class info and provide query methods.

	* perllib/GLED_GledCore_Widgets.pm:
	Rewrite GLED::Widgets::PhonyEnum to use new GledNS structures.

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	Move LensState_e from nested class LensDetails up into ZQueen.

	* FL/Fl_PhonyEnum.cxx:
	* FL/Fl_PhonyEnum.h:
	Rename method Bruh() to AddEntry().

2009-04-05  Matevz Tadel  <matevz.tadel@ijs.si>

	Minor fixes.

	* Gled/Gled.cxx:
	Fix dump of 'auth-dir not found' warning.

	* Rnr/GL/WGlFrameStyle_GL_Rnr.cxx:
	Modify polgon-offset handling - on some nvidias the frame was
	hidden under the tile.

2009-03-28  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	* Gled/Gled.cxx:
	Cannonize GLED_BUILD defines.

2009-03-08  Matevz Tadel  <matevz.tadel@ijs.si>

	Intruduce new config header gled-config-build.h.

	* Ephra/Saturn.cxx:
	Include the new config header.

	* Gled/Gled.cxx:
	Include the new config header.
	In InitLogging() dump also svn revision and URL.

2009-03-04  Matevz Tadel  <matevz.tadel@ijs.si>

	With Jona: fixes for the Intel/Mesa 3D driver.

	* Pupils/Pupil.cxx:
	Intel/Mesa 3D driver crashes when trying to use non-existing (or
	null) GL context (ATI and NVIDIA drivers seem to survive
	this). So, make sure that GL-context is initialized before trying
	to use it:
	
	1. Call glewInit() from the draw() function of the GL context-holder
	window.

	2. In handle() we need to make the context current as renderes can be
	instantiated while querying for an object renderer. Return
	immediately if the GL-window is not in valid() state.

2009-02-26  Matevz Tadel  <matevz.tadel@ijs.si>

	Use GLEW includes instead of system ones.

	* Pupils/Pupil.cxx:
	Call 'glewInit()' when creating the gl-context holder.

2008-12-23  Matevz Tadel  <matevz.tadel@ijs.si>

	* bin/gled-auth-genkeypair:
	* bin/gled-auth-init:
	Use gled-config to obtain data-dir and thus perllib location.
	This removes dependence on GLEDSYS environment variable.

	* Makefile:
	Fiddle a bit with Darwin hacks - needs to be revisited everywhere.

2008-12-21  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	Add TString members mLibDir, mDataDir, mHomeDir.

	Initialize them from GLEDSYS (if defined), from data passed to
	configure (stored in gled-config.h) or via command-line
	arguments. If they remain undefined, die a horrible death.

	Reshuffle initialization a bit - we have to parse command-line
	arguments before setting up some paths as lib/datadir might be
	passed in.

	Remove 'static void InitStatics()'.

	* gled.cxx:
	* saturn.cxx:
	Remove call to Gled::InitStatics().
	Make gled pointer local to main().
	Add a todo comment - bitching about XInitThreads() in gled.cxx.

	* GledView/GledGUI.cxx:
	Remove some cruft, leave note the XInitThreads() was called once.

	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	Use gled-libdir to retrieve default font file.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Add member 'Bool_t bAllowHandlerSwitchInPupil'.

	* Pupils/Pupil.cxx:
	Only allow switching of event handler if
	bAllowHandlerSwitchInPupil is true.

	* Makefile:
	Remove superfluous '-Llib' directive.

2008-12-18  Matevz Tadel  <matevz.tadel@ijs.si>

	* GledView/GledGUI.cxx:
	Another attempt at TCanvas instantiation, mostly failed. Add
	comments what to try next.

2008-12-15  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/Gled.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	Remove locking of ROOT display in NewCanvas() - call constructor
	via interpreter instead. Might require one more iteration, to call
	via TTimer.

2008-12-14  Matevz Tadel  <matevz.tadel@ijs.si>

	* lib-exec:
	* libexec:
	Renamed directory.

	* perllib/GLED_Widgets.pm:
	* perllib/GLED_GledCore_Widgets.pm:
	Renamed for consistency.

	* perllib/Weed.p7:
	Removed obsolete file.

2008-12-02  Matevz Tadel  <matevz.tadel@ijs.si>

	This update requires 'make clean', if possible prior to update.

	* bin/GledNodeReport.pl:
	Removed obsolete helper-script - information now obtained via
	TSystem.

	* Glasses/AList.cxx:
	* Glasses/AList.h:
	Add new interface function that returns all elements with given
	name:
	  virtual Int_t GetElementsByName(const TString& name, lpZGlass_t& dest);
	
	* Glasses/GledMonitor.cxx:
	* Glasses/GledMonitor.h:
	Use TSystem to retrieve cpu and memory info.

	* Glasses/SaturnInfo.cxx:
	* Glasses/SaturnInfo.h:
	Sanitize GUI p7 pragmas to make layout clearer.

	* Glasses/ZNameMap.cxx:
	* Glasses/ZNameMap.h:
	Replace internal map with multimap. This is a major change as it
	removes the need for guessing what to do when an element with an
	existing name is added into the container or an element is renamed
	to another existing name.
	Bool_t members bReplaceOnInsert and bReplaceOnRename have been
	removed.
	Bool_t member bWarnEqualName has been added.
	When bKeepSorted is true, shoot a MIR to request sorting of the
	parent list instead of calling it directly.
	Added function member DumpNameMap().

	* Gled/Gled.cxx:
	Use TSystem to retrieve system and memory info.

2008-10-02  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/AList.h:
	* Glasses/AList.cxx:
	* Glasses/ZVector.h:
	* Glasses/ZVector.cxx:
	* Glasses/ZList.h:
	* Glasses/ZList.cxx:
	* Glasses/ZDeque.h:
	* Glasses/ZDeque.cxx:
	* Glasses/ZNameMap.h:
	* Glasses/ZNameMap.cxx:
	* Glasses/ZHashList.h:
	* Glasses/ZHashList.cxx:
	* Glasses/ZStringMap.h:
	* Glasses/ZStringMap.cxx:
	Move member return_zeros from AList::stepper_base to the
	Stepper class template. Prefix all data-member names in stepper
	stuff with 'm_'.

	AList::RemoveAll(lens) now returns an integer (number of elements
	removed).

	* Glasses/ShellInfo.h:
	* Glasses/ShellInfo.cxx:
	* GledView/FTW_Shell.cxx:
	Add method ShellInfo::SpawnClassView() with appropriate private
	raq quantum number and handler in FTW_Shell.

	* Glasses/WGlButton.cxx:
	Fix comment typo.

2008-09-30  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZVector.h:
	* Glasses/ZVector.cxx:
	Add specialized methods for owned/contained ZVectors:
	  Int_t  FindFirstEmptyId(Int_t index=0);
	  Int_t  CountEmptyIds();

	Remove a forgotten mutex unlock (ups).

	* Stones/ZTrans.h:
	Make double*/float* args to SetPos() and SetBaseVec() const.

2008-09-29  Matevz Tadel  <matevz.tadel@ijs.si>

	* macros/gled_view_globals.C:
	Latest cint seems to have trouble converting character arrays to
	TString - so define a TString for the call to 'GledNS::LoadSo()'.

2008-09-29  Matevz Tadel  <matevz.tadel@ijs.si>

	* macros/eye.C:
	Fix missing return values when exiting due to an error.

	* Glasses/ZQueen.cxx:
	Typo in comment.

2008-09-25  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	Do not accept rays after the raw-emitting thread is canceled.

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	New class GTerminateHandler : public TSignalHandler to handle
	sig-term gracefully, shutting down the ROOT's event loop.
	Instantiate and register GTerminateHandler before calling
	TRint::Run().
	Add cleanup function do detect if somebody is trying to cancel the
	TRint thread.

	* gled.cxx:
	When Gled::Run() finishes before TRint, use sig-term to terminate
	TRint.

	* Pupils/Pupil.cxx:
	When rendering overlay, manually call pupil_rnr->Pre/PostDraw(mDriver).
	This clears the rnr-mod stacks and loads the default font.
	Need some more structure here.
	
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	Bugfix - the old state of auto-normal-scaling was stored in
	local variable with the same name as the data-member.
	Thanks valgrind.

	* Rnr/GL/ZRlFont_GL_Rnr.cxx:
	In AbsorbRay() throw an exception if loading of a new font fails.

	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	Whitespace.

2008-09-23  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Mountain.cxx:
	* Ephra/Mountain.h:
	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	* Eye/Ray.cxx:
	* Glasses/AList.cxx:
	* Glasses/Eventor.cxx:
	* Glasses/Eventor.h:
	* Glasses/EyeInfo.cxx:
	* Glasses/GledMonitor.cxx:
	* Glasses/GledMonitor.h:
	* Glasses/Operator.cxx:
	* Glasses/Operator.h:
	* Glasses/PerfMeterOperator.cxx:
	* Glasses/PerfMeterOperator.h:
	* Glasses/PipeEventor.cxx:
	* Glasses/PipeEventor.h:
	* Glasses/SaturnObserver.cxx:
	* Glasses/SaturnObserver.h:
	* Glasses/ScreenDumper.cxx:
	* Glasses/ScreenDumper.h:
	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	* Glasses/ZIdentityFilter.cxx:
	* Glasses/ZIdentityFilter.h:
	* Glasses/ZIdentityListFilter.cxx:
	* Glasses/ZKing.cxx:
	* Glasses/ZList.cxx:
	* Glasses/ZMEESelfFilter.cxx:
	* Glasses/ZMethodTagPreFilter.cxx:
	* Glasses/ZQueen.cxx:
	* Glasses/ZSunQueen.cxx:
	* Gled/GCondition.cxx:
	* Gled/GCondition.h:
	* Gled/GKeyRSA.cxx:
	* Gled/GMutex.cxx:
	* Gled/GMutex.h:
	* Gled/GThread.cxx:
	* Gled/GThread.h:
	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* Gled/GledNS.cxx:
	* Gled/GledTypes.h:
	* GledView/FTW.cxx:
	* GledView/FTW_Shell.cxx:
	* GledView/FltkGledStuff.cxx:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	* GledView/MCW_Button.cxx:
	* GledView/MCW_View.cxx:
	* GledView/MCW_View.h:
	* Stones/ZComet.cxx:
	* Stones/ZMIR.cxx:
	* Stones/ZMIR.h:
	* catalog.patch:
	* gled.cxx:
	* saturn.cxx:
	GThread now wraps the passed thread function into its own
	static wrapper function. This allows us to do better thread
	management as well as to specify thread cleanup function at
	runtime.
	Add support for setting of "nice" value for a thread.
	Put owner and MIR from TSD into thread as data-members. This
	allows printing of all threads from a static function
	GThread::ListThreads().
	Each thread has a name now.

	Prefix members in FID_t, FMID_t and MIR with 'f' and capitalize
	them.

2008-08-11  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/Lamp.h:
	Increase step precision for attenuation parameters.

	* Glasses/PupilInfo.cxx:
	When changing FOV via Zoom(), set maximum to 160 degrees.

	* Pupils/FBO.cxx:
	Remove debug printout.

	* Pupils/Pupil.cxx:
	Decrease scroll-wheel sensitivity.

2008-07-27  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/Sphere.h:
	Whitespace.

	* Glasses/ZVector.h:
	Add operator[] for direct element access.
	Whitespace.

2008-07-20  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Reorganized redraw/dump-image ray handling.
	When dumping to a file, added optional copying of the image on the
	screen (useful for movie capture).

	* Glasses/ScreenDumper.cxx:
	* Glasses/ScreenDumper.h:
	Follow changes in PupilInfo.

	* Pupils/FBO.cxx:
	* Pupils/FBO.h:
	Added flag that enforces allocation of framebuffer with power-2
	dimensions. Helps on ATI when the buffer is used for texturing.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Follow changes in pupil info.
	Support copy-to-screen after render-to-FBO, dump-image.
	Remove pbuffer code.
	When dumping tga files use host2net() to write image props.

	* Pupils/pbuffer.cxx:
	* Pupils/pbuffer.h:
	Removed files. FBOs are used now.

	* GledView/MCW_Button.h:
	Whitespace.

2008-07-18  Matevz Tadel  <matevz.tadel@ijs.si>

	* Pupils/FBO.cxx:
	* Pupils/FBO.h:
	New class for management of framebuffer objects.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Usage FBO for screen dumps.
	The pbuffer code is still there but will be removed when FBOs are
	confirmed to work manywhere.

	* Pupils/pbuffer.cxx:
	Better error reporting during pbuffer construction.

2008-05-26  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	Use sub-class of TStdExceptionHandler to handle gled exceptions
	making it all the way to root's system loop.
	Add member 'GThread* mRintThread' which I hoped would help me
	somehow make the bastard exit its event-loop.

	* gled.cxx:
	* saturn.cxx:
	Avoid the problem with uncaught exception in TSystem::Run() after
	gled cancels the TRint thread. The temporary hack is just to skip
	thread cancelation and call exit().

2008-05-24  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/WGlButton.cxx:
	* Glasses/WGlButton.h:
	* Rnr/GL/WGlButton_GL_Rnr.cxx:
	Add optional Int_t and TString members that are passed as
	arguments with the callback-MIR.

	* Stones/SGridStepper.cxx:
	* Stones/SGridStepper.h:
	Add copy-like constructor that makes initialization of secondary
	steppers cleaner.

2008-05-07  Matevz Tadel  <matevz.tadel@ijs.si>

	* Makefile:
	* Gled/GledNS.cxx:
	* GledView/MTW_MetaView.cxx:
	* RegExp/Makefile:
	* RegExp/TPME.h:
	* RegExp/TPME/TPME.cxx:
	* RegExp/TPME/config.h:
	* RegExp/pcre.h:
	* RegExp/pcre/chartables.c:
	* RegExp/pcre/config.h:
	* RegExp/pcre/get.c:
	* RegExp/pcre/internal.h:
	* RegExp/pcre/pcre.c:
	* RegExp/pcre/study.c:
	* RegExp/pme.h:
	* RegExp/pme/config.h:
	* RegExp/pme/pme.cpp:
	Use TPMERegexp class from ROOT instead of internal PME/pcre.
	The Regexp/ sub-directory has been cleaned-up.

	This requires the latest ROOT (r23681).

2008-04-21  Matevz Tadel  <matevz.tadel@ijs.si>

	* RnrBase/A_Rnr.h:
	Add fDX, fDY members to A_Rnr::Fl_Event. Needed to pass the
	mouse-wheel events into renderers.

	* Pupils/Pupil.cxx:
	Pass also mouse-wheel and keyboard events into renderers.

	* Glasses/WGlWidget.cxx:
	* Glasses/WGlWidget.h:
	* Glasses/WGlButton.cxx:
	* Glasses/WGlButton.h:
	* Glasses/WGlValuator.cxx:
	* Glasses/WGlValuator.h:
	Extract common base WGlWidget from WGlButton and WGlValuator.

	* Rnr/GL/WGlValuator_GL_Rnr.cxx:
	* Rnr/GL/WGlValuator_GL_Rnr.h:
	Add support for middle/right mouse drag (like in fltk).
	Add support for mouse-wheel value changing.

	* glass.list:
	Register new glass WGlWidget.

2008-04-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/OptoStructs.h:
	Ifdef-out hash_map typedefs for CINT.

	* Glasses/AList.h:
	Add reset() to Stepper<>.

	* Glasses/WGlButton.cxx:
	* Glasses/WGlButton.h:
	* Glasses/WGlDirectory.h:
	Whitespace.

	* Stones/SGridStepper.cxx:
	* Stones/SGridStepper.h:
	Add SetOs().

2008-03-24  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GledTypes.h:
	* Gled/GledNS.cxx:
	* catalog.patch:
	Derive Exc_t from TString instead of std::string.
	Make it known to CINT.

	* Pupils/GuiPupil.cxx:
	Comment out unused variables in unnamed namespace.

	* RegExp/Makefile:
	Fix linking notification.

	* macros/eye.C:
	fill_GledCore_layouts() - return list that holds the layouts, not
	the top-level container.

2008-02-20  Matevz Tadel  <matevz.tadel@ijs.si>

	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	Add virtual functions LockRootDisplay() and UnlockRootDisplay().

	* Pupils/Pupil.cxx:
	Lock Root display before dumping an image (interfered with
	creation of pbuffers).

2008-01-28  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/Eventor.cxx:
	Realign.

	* Pupils/Pupil.cxx:
	Handle overlay events first, pass them to external event handler
	only if they were not handled there.
	Honour redraw from render-driver only is bAutoRedraw is set.

	* Rnr/GL/GLRnrDriver.cxx:
	Set redraw-required flag to false in BeginRender().

2007-08-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Eye.cxx:
	* Gled/Gled.cxx:
	* Pupils/Pupil.cxx:
	* Stones/ZMIR.cxx:
	Init uninitialized vars reported by valgrind.

2007-07-09  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/Gled.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	Added virtual functions Lock/UnlockFltk().

	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	Added function OrtoNorm3Column(col, ref).

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	* GledView/FTW_Shell.cxx:
	Added Int_t Eye::mSatSocketFd as ROOT now automatically closes the
	socket when other side drops the connection and fd is no longer
	available.

	* macros/glass_defines.h:
	Added define ASSIGN_GLASS.

2007-03-30  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	* Eye/Ray.cxx:
	* Glasses/PupilInfo.cxx:
	* Glasses/SaturnInfo.cxx:
	* Glasses/ZDeque.cxx:
	* Glasses/ZHashList.cxx:
	* Glasses/ZList.cxx:
	* Glasses/ZNode.cxx:
	* Glasses/ZQueen.cxx:
	* Glasses/ZStringMap.cxx:
	* Glasses/ZSunQueen.cxx:
	* Glasses/ZVector.cxx:
	* Gled/GKeyRSA.cxx:
	* Gled/GledNS.cxx:
	* Gled/GledTypes.h:
	* GledView/MCW_View.cxx:
	* Pupils/Pupil.cxx:
	* Rnr/GL/GLTextNS.cxx:
	* Rnr/GL/ZGlClipPlane_GL_Rnr.cxx:
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	* Stones/ZMIR.h:
	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	Changes for root-5-15-04 (increased modularity).

2007-02-25  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZNode.cxx:
	Use auto_ptr in BtoA().

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	Added comment about trying out different display-list creation
	options (found no speed difference).

2007-02-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GledTypes.h:
	config.h was renamed to gled-config.h.

2007-02-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* gled.cxx:
	* saturn.cxx:
	Disable locking in CINT process line (from root-5.14.00 onwards we
	no longer need to patch root for gled).

2007-02-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	Added method StampReqTring(FID_t).

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Rearange stamp functions.

	* Glasses/Lamp.cxx:
	Consistency in float constants.

	* Stones/ZColor.h:
	* Stones/ZColor.cxx:
	* Stones/ZColorMark.h:
	Rearange, add some grayscale functions.

	* perllib/GLED_Widgets.pm:
	Add support for '-tooltip' weed argument.

2007-01-09  Matevz Tadel  <matevz.tadel@ijs.si>

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Preliminary decoupling of event-handler; export some more camera
	stuff into RnrDriver.

	* RnrBase/RnrDriver.h:
	Added some camera/projection matrix stuff as data-members.

2006-12-05  Matevz Tadel  <matevz.tadel@ijs.si>

	* Rnr/GL/ZGlass_GL_Rnr.h:
	Added inner class GL_Float_Holder to set/restore value of a float
	uniform variable.

2006-11-30  Matevz Tadel  <matevz.tadel@ijs.si>

	* Rnr/GL/SphereTrings.cxx:
	* Rnr/GL/SphereTrings.h:
	Added function UnitFrameBox().

2006-11-12  Matevz Tadel  <matevz.tadel@ijs.si>

	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	Exposed some base-vec ortogonalize/norm methods; added method
	SetBaseVecViaCross(); made get/set base-vec methods inline.

	* Pupils/Pupil.cxx:
	Added some comments.

2006-10-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GledNS.cxx:
	In ClassInfo::GetRendererCI() broke up an if-statement to properly
	navigate class-hierarchy when specified render-glass delegates
	renedering to further base-class.

	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	Added some more comments, fixed alignment. To be included in Reve.

	* perllib/GLED_Widgets.pm:
	Added comments about -const switch.

2006-09-04  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	Removed null-lens-img handling introduced in previous
	check-in. That was a mistake. Added method 'ZGlass*
	DemangleID2Lens(ID_t id)'.

	* Glasses/AList.cxx:
	Expanded widths of some fields in DumpElements().

	* Glasses/ZStringMap.cxx:
	* Glasses/ZStringMap.h:
	Added 'ZGlass*GetElementByLabel(TString label)'; fixed some
	preoblems with null-lenses and reference counting.

	* Glasses/ZVector.cxx:
	* Glasses/ZVector.h:
	Implementation of functionality; this was bare bones before.

	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	Inlined various CastLens/ID functions.

	* GledView/FTW.cxx:
	* GledView/FTW.h:
	* GledView/FTW_Branch.cxx:
	* GledView/FTW_Leaf.cxx:
	* GledView/FTW_Leaf.h:
	* GledView/FTW_Shell.cxx:
	Support null fImg on FTW_Leaf.

	* perllib/GLED_Widgets.pm:
	Disable weed resize for Value and HexValue when -width is specified.

	* catalog.patch:
	Disabled Streamer() generation for ZVector.

2006-09-01  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/AList.cxx:
	* Glasses/AList.h:
	Finalized and implemented base-class support for labeled elements
	(as needed for ZStringMap).

	* Glasses/ZStringMap.cxx:
	* Glasses/ZStringMap.h:
	Implementation of functionality; this was bare bones before.

	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	Added method FindFirst(ZGlass*). Minor format changes.

	* Glasses/ZDeque.h:
	Set element-type to ET_Nil.

	* Glasses/ShellInfo.cxx:
	* Glasses/ShellInfo.h:
	Renamed member bCollZList to bCollAList.

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	Added member mNullLensImg to represent empty list slot, added
	optional flag to DemanglePtr() allowing the return of
	null-lens-img if glass-pointer argument is null.

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	Added special constructor for null-lens-img; added 'AList*
	ZGLassImg::GetList()'.

	* Eye/Ray.h:
	Made TString& args to ray setters const.

	* GledView/FTW_Branch.cxx:
	* GledView/FTW_Branch.h:
	Added handling of ray quantum-numbers produced by ZStringMap;
	implemented list-element designation control.

	* GledView/FTW_Leaf.cxx:
	* GledView/FTW_Leaf.h:
	Added list-element designation handling.

	* GledView/FTW.cxx:
	* GledView/FTW.h:
	Added class ListDesignator to handle list-element designations
	within FTW_Leaf.

	* GledView/FTW_Shell.cxx:
	* GledView/FTW_Shell.h:
	Extended X_Set/ClearLink to also work on list elements, renamed
	them to X_Set/ClearLinkOrElement.

	* GledView/FTW_Nest.cxx:
	* GledView/FTW_Nest.h:
	Force-feed key events to wMenuPack as shortcuts; call
	FTW_Shell::Set/ClearLink by their new names from menu handlers.

	* GledView/FTW_Ant.cxx:
	Fixed size of list expander's label.

	* GledView/FltkGledStuff.cxx:
	* GledView/FltkGledStuff.h:
	Changed argument to grep_shell_or_die from TString to Exc_t.

	* GledView/GledGUI.cxx:
	Noticed that setting font-id from command line causes segvs; print
	warning and ignore. Set font-size for message windows as well.

	* GledView/MTW_ClassView.cxx:
	Follow rename of member in ShellInfo; do not collapse ZGlass view
	if there are only up to two classes in the hierarchy.

	* GledView/MTW_Layout.cxx:
	* GledView/MTW_Layout.h:
	In CountSubViews(): added protection for zero lens argument (can
	happen for empty list slots); renamed argument from glass to lens.

	* Makefile:
	Added files from Pupils/ to variable holding all dependecies. This
	omission was causing that dependencies were not properly rebuilt.

	* catalog.patch:
	Disabled Streamer() generation for ZStringMap.

2006-07-03  Matevz Tadel  <matevz.tadel@ijs.si>

	* GledView/GledGUI.cxx:
	Added 10 second timeout to Fl::wait() in Run(); there was a
	problem when running gled with no-main-window switch.

2006-06-30  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZKing.cxx:
	Fixed compilation warnings.

	* Makefile:
	* RegExp/Makefile:
	Added echoes and mutes to relevant targets.

2006-06-18  Matevz Tadel  <matevz.tadel@ijs.si>

	* gled.pch.h:
	New file, selection of GledCore headers for pre-compilation of
	headers.

	* Makefile:
	Use '+=' for assignment to LIBSET_PREREQS/TARGETS; moved kerberos
	include after including make_base.

2006-06-15  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/Gled.cxx:
	* Gled/GledTypes.h:
	Added InfoStream(const std::string&) variant.

	* Gled/GledNS.cxx:
	Expanded operators+(Exc_t + <anything>); gave weird results on
	gentoo amd64, whatever the compiler mixture was (somebody replaced
	gcc from 3.4.6 to 4.1.1 in the meantime, so the fix might be
	unnecessary).

2006-06-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* macros/eye.C:
	Added protections for execution without GUI libraries to all functions.

	* Ephra/Saturn.cxx:
	* Eye/Eye.cxx:
	* Glasses/ZDeque.cxx:
	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	* Glasses/ZList.cxx:
	* Glasses/ZQueen.cxx:
	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	* GledView/FTW_Nest.cxx:
	* GledView/FTW_Shell.cxx:
	* GledView/FltkGledStuff.cxx:
	* Pupils/Pupil.cxx:
	* Rnr/GL/GLRnrDriver.cxx:
	* Stones/SGridStepper.cxx:
	* Stones/SGridStepper.h:
	* Stones/ZComet.cxx:
	Changes for 64-bit machine compilation.

2006-06-09  Matevz Tadel  <matevz.tadel@ijs.si>

	* GledView/FTW_Shell.cxx:
	* GledView/FTW_Shell.h:
	Fixed compilation warnings with gcc4.

2006-05-23  Alja Mrak-Tadel  <alja.mrak@ijs.si>

	* Gled/GledNS.cxx:
	Fix tokenize_url(): it failed if the last character in path was
	'-' (a terminal character with look-ahead for '>').

2006-05-22  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	* Pupils/Pupil.cxx:
	Added member Bool_t PupilInfo::bRnrFakeOverlayInCapture controlling
	whether to render overlay during capture or not.

	* Glasses/ZCometBag.cxx:
	* Gled/GThread.cxx:
	* Rnr/GL/GlobalLamps_GL_Rnr.h:
	Compatibility updates (gcc4/FC5/ROOT).

2006-04-20  Alja Mrak-Tadel  <alja.mrak@ijs.si>

	* Glasses/Eventor.cxx:
	Initialize mInternalTime in OnStart() for epoch-time ET_Manual (it
	was left whatever it was before).

	* Glasses/PupilInfo.h:
	Increased range of mNear/FarClip to 100000.

	* Glasses/ScreenDumper.cxx:
	* Glasses/ScreenDumper.h:
	Split Operate() into additional method DumpScreen() so that it can be
	called independently from the operate-loop.

	* Glasses/ZCometBag.cxx:
	* Glasses/ZCometBag.h:
	Added method WriteComet().

	* Stones/ZRCStone.h:
	Added X{G} pragma for mRefCount.

2006-02-09  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Added half-cooked support for smooth camera-home animation (try
	Shift-Home). Rotation is not animated; works well if LookAt is set.

	* Glasses/ZGlLightModel.cxx:
	* Glasses/ZGlLightModel.h:
	* Rnr/GL/ZGlLightModel_GL_Rnr.cxx:
	Added DepthMask flag to shade-model operations; perhaps not the
	best place.

2006-02-07  Matevz Tadel  <matevz.tadel@ijs.si>

	* Rnr/GL/Text_GL_Rnr.cxx:
	Use GLRnrDriver's Color function (allow color modulation and
	fade-out).

2006-02-06  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GledNS.cxx:
	Re-enabled CINT-mutex locking during lens streaming. Apparently
	everything is not fine there (yet).

	* Glasses/ZGlClipPlane.cxx:
	* Glasses/ZGlClipPlane.h:
	* Rnr/GL/ZGlClipPlane_GL_Rnr.cxx:
	Added members mX, mY and mZ to control clipping plane position.

2006-01-15  Matevz Tadel  <matevz.tadel@ijs.si>

	* catalog.patch:
	* Stones/ZTrans.cxx:
	Made custom Streamer for ZTrans: set bAsOK to false afetr
	read. Automatic schema evolution is still used.

	* Glasses/Eventor.cxx:
	In _init(): set mLocBeatsDone to 0.

2006-01-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlass.h:
	Stamping: added 'if mSaturn' prior to Ray creation. This was
	causing segv during WSSeed::on_rebuild() (which uses stamping to
	signal retriangulation) when called from AList::RebuildListRefs()
	from ZComet import.

2006-01-06  Matevz Tadel  <matevz.tadel@ijs.si>

	* glass.list:
	* Glasses/ZGlColorFader.cxx:
	* Glasses/ZGlColorFader.h:
	* Rnr/GL/ZGlColorFader_GL_Rnr.cxx:
	* Rnr/GL/ZGlColorFader_GL_Rnr.h:
	New glass ZGlColorFader; somewhat supports centrally scaled color,
	point size and line width.

	* Rnr/GL/GLRnrDriver.cxx:
	* Rnr/GL/GLRnrDriver.h:
	Added support for ZGlColorFader rnr-mod.

	* RnrBase/RnrDriver.h:
	Added method RnrDriver::RMStack::get_active().

	* Rnr/GL/Box_GL_Rnr.cxx:
	* Rnr/GL/Cylinder_GL_Rnr.cxx:
	* Rnr/GL/Sphere_GL_Rnr.cxx:
	* Rnr/GL/ZGlBlending_GL_Rnr.cxx:
	* Rnr/GL/ZGlBlending_GL_Rnr.h:
	Use color/point-size/line-width from GLRnrDriver.

2005-12-24  Matevz Tadel  <matevz.tadel@ijs.si>

	Port to gcc-4 and OSX. Some other fixes.
	
	* Glasses/AList.cxx:
	* Glasses/AList.h:
	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	* Glasses/ZList.cxx:
	* Glasses/ZNameMap.cxx:
	Better stamping; gcc-4.

	* Glasses/Eventor.cxx:
	* Glasses/Eventor.h:
	* Glasses/Operator.cxx:
	* Glasses/Operator.h:
	Added virtual function ResetRecursively().

	* Glasses/WGlButton.cxx:
	* Glasses/WGlButton.h:
	Added optional callback-beta link and method ExitGled() (does not
	belong here, really).

	* Glasses/WGlDirectory.cxx:
	* Glasses/WGlDirectory.h:
	Added local link LastClicked.

	* Glasses/ZGlPerspective.cxx:
	Removed origin setting from standard-setters.

	* Glasses/ZHashList.h:
	Added missing virtual method el_type().

	* Glasses/ZNode.h:
	Added non-const ZTrans& ref_trans() for faster low-level
	operations.

	* Glasses/ZQueen.cxx:
	Added argument checks in RemoveLens[es]().

	* Gled/GCondition.cxx:
	* Gled/GCondition.h:
	Added methods LockSignal() and LockBroadcast().

	* Gled/GMutex.cxx:
	Use standard posix pthread macros for mutex types (was using _NP
	macros from linux-threads before). For OSX.

	* Gled/GThread.cxx:
	* Gled/GThread.h:
	Expose more of GThread class to CINT.

	* Gled/GTime.cxx:
	* Gled/GTime.h:
	Added operator=() for Long_t, ULong_t and Double_t.

	* Gled/GledNS.cxx:
	Commented-out CINT-lock protections in StreamLens methods (locks
	now done in ROOT's streaming code); in ClassInfo::GetRendererCI
	search upwards for actual renderer.

	* GledView/FTW_Branch.cxx:
	Relabel namebox on any list related ray.

	* GledView/FTW_Shell.cxx:
	Static exception headerss changed from TString to Exc_t.

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Added bShowOverlay, OSX.

	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	Check if default font found.

	* Rnr/GL/Text_GL_Rnr.cxx:
	Decoupled rendering of back-polygon from frame-polygon. 

	* Rnr/GL/WGlButton_GL_Rnr.cxx:
	Added callback-beta to mir (can of course be zero).

	* Rnr/GL/WGlDirectory_GL_Rnr.cxx:
	Style changes.

	* Stones/SEvTaskState.cxx:
	* Stones/SEvTaskState.h:
	* Stones/SGridStepper.cxx:
	Origin was not taken into account.

	* Eye/OptoStructs.h:
	* Gled/GledTypes.h:
	* Gled/GSelector.cxx:
	* GledView/FTW.h:
	* GledView/FltkGledStuff.h:
	* GledView/GledGUI.cxx:
	* GledView/MTW_MetaView.h:
	* Rnr/GL/GLRnrDriver.cxx:
	* Stones/ZColor.h:
	gcc-4.

	* Makefile:
	* Pupils/pbuffer.cxx:
	* Pupils/pbuffer.h:
	* RegExp/Makefile:
	OSX.

2005-11-09  Alja Mrak-Tadel  <alja.mrak@ijs.si>

	* Glasses/WGlButton.cxx:
	* Glasses/WGlButton.h:
	* Pupils/Pupil.cxx:
	* Stones/SGridStepper.cxx:
	* Stones/SGridStepper.h:

2005-11-08  Alja Mrak-Tadel  <alja.mrak@ijs.si>

	* Glasses/WGlDirectory.cxx:
	* Glasses/WGlDirectory.h:
	* Rnr/GL/WGlDirectory_GL_Rnr.cxx:
	* Rnr/GL/WGlDirectory_GL_Rnr.h:
        Add pager and title display.

	* Rnr/GL/WGlFrameStyle_GL_Rnr.cxx:
	* Rnr/GL/WGlFrameStyle_GL_Rnr.h:
        Add FullSymbolRender and addtional arguments in FullRender
        to display pager in WGlDirectory.

2005-10-24  Matevz Tadel  <matevz.tadel@ijs.si>

	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	New method SetRotByAnyAngles (arbitrary Cardan/Euler angles);
	optimized RotateLF/PF and OrtoNorm3.

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Wrappers for new ZTrans method SetRotByAnyAngles.

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	AdoptComet: replaced ZList* arguments by AList*.

	* Glasses/Eventor.cxx:
	During Reset set mEventID and mInternalTime to zero.

	* Glasses/Lamp.cxx:
	* Glasses/Lamp.h:
	* Rnr/GL/Lamp_GL_Rnr.cxx:
	* Rnr/GL/Lamp_GL_Rnr.h:
	Renamed member mScale to mLampScale.

	* Pupils/Pupil.cxx:
	rnr_standard: added try-catch around camera setup.

2005-10-11  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/Operator.cxx:
	* Glasses/Operator.h:
	* Ephra/Mountain.cxx:
	Renamed Operator::Arg::fEventID to fBeatID and moved its
	manipulation from Eventor to Mountain (where other low-level stuff
	from Op::Arg is handled).

	* Eye/Ray.cxx:
	* Eye/Ray.h:
	Added Get/PutAnyPTR methods.

	* Glasses/AList.h:
	Added member m_cur to AList::Stepper; this allows selecting a base
	that is not derived from ZGlass.

	* Glasses/Eventor.cxx:
	* Glasses/Eventor.h:
	Added internal time service. Time can feed on system time or make
	fixed steps thus producing fictitious internal time. Also provides
	a stack of time so that Operator hierarchy can modify notion of
	time for a sub-tree.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Modified image dumping, added option to wait for a redraw/dump to
	finish; added option to turn off auto-redraw.

	* Glasses/ScreenDumper.cxx:
	* Glasses/ScreenDumper.h:
	Added option to wait for screen dump to finish (useful for
	key-frame animation). Now uses internal counter, not event id from
	Operator::Arg.

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	Added method 'SetUseDLRec(Bool_t state)' that sets usage of
	display lists for the lens and all its list elements recursively
	(but stays within the same queen).

	* GledView/MCW_View.cxx:
	* GledView/MCW_View.h:
	Added support for TString and string arguments. Fixed an old
	exception format.

	* Pupils/pbuffer.cxx:
	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	Cosmetics.

2005-10-03  Matevz TADEL  <matevz.tadel@ijs.si>

	======================================================
	Major changes for gled-1.3
	======================================================

	Eye and RnrDriver completely decoupled from fltk. This allows them
	to be put into base part of the libset. GL rendering can now in
	principle be used without fltk (no inter-library dependence).

	Directory reorganizations:
	1) Moved ftws, mtws and alike from Eye/ to GledView/.
	2) Removed Net/ directory, Ray was put into Eye/.

	Implemented links via ZLinkBase class and templated class
	ZLink. This was needed for adoption of ROOT's automatic schema
	evolution mechanism. Also makes things easier to change now. It is
	no longer necessary to initialize links to zero in the _init()
	method of a glass.
	
	Rewrite of list inheritance: base class for Gled-lists is now
	abstract base-glass AList. Allows optimal implementation of
	specific containers (like ZVector and ZStringMap).

	Consistently use TString instead of std::string. The only place
	where std::string is still used are exceptions, but they have been
	wrapped in a base class Exc_t. Added TPME wrapper over PCRE
	working with ROOT's TString class (just PME with TString).

	ZTrans has been changed to use 4x4 double matrix internally
	(instead of 5x5 float). ZNode's transformation interface is somewhat
	consolidated.

	
	Most of the files have changed in all libsets and demos.


	Migration instructions
	======================

	To convert Links to new format [formatting lost]:
	find . -name \*.h | xargs grep -l L{} | \
	xargs perl -pi -e '          \
	  if(m/L{}/) {               \
	    ($t) = /^\s*([\w]+)\*/;  \
	    s/$t\*/ZLink<$t>/;       \
	  }'

	To remove GlassIODefs:
	find . -name \*.h | xargs grep -l GlassIODef | \
	xargs perl -pi -e 'undef $_ if /GlassIODef/;'

	Exceptions are now of Exc_t, see GledCore/Gled/GledTypes.h.
	To replace exception headers (as used in GledCore):
	find . -name \*.cxx | xargs grep -l "static const string" | \
	  xargs perl -pi -e 's/static const string/static const Exc_t/og;'

	Replace the following for copying/accessing ZList elements (and
	use AList* as generic container interface):
	Copy -> CopyList
	CopyByGlass -> CopyListByGlass

	Direct iterations over mGlasses should be replaced with
	AList::Stepper.
	
2005-08-30  Matevz Tadel  <matevz.tadel@ijs.si>

	* Rnr/GL/GLGridStepper.cxx:
	* Rnr/GL/GLGridStepper.h:
	* Stones/SGridStepper.cxx:
	* Stones/SGridStepper.h:
	Moved Rnr/GL/GLGridStepper to Stones/SGridStepper.

	* Rnr/GL/WGlDirectory_GL_Rnr.cxx:
	Use non-gl dependent GridStepper.

2005-08-30  Matevz Tadel  <matevz.tadel@ijs.si>

	* Rnr/GL/GLGridStepper.cxx:
	* Rnr/GL/GLGridStepper.h:
	New class GLGridStepper: stepping over regular grid.

	* Rnr/GL/WGlDirectory_GL_Rnr.cxx:
	Stepping code moved to independent class GLGridStepper.

2005-08-29  Matevz Tadel  <matevz.tadel@ijs.si>

	* catalog.patch:
	Added pragmas to make lpZGlass_t/i stuff (also ZList::Copy()) to
	work from CINT.

2005-08-26  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/MCW_Button.cxx:
	* Eye/MCW_View.cxx:
	* Eye/MCW_View.h:
	Moved split_argument() and unrefptrconst_type() to GledNS.

	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	New functions for catalog interactions, argument parsing and
	value-type operations.

	1. DeduceMethodInfo(), DeduceDataMemberInfo(): generick search for
	methods and data-members.

	2. split_argument(), unrefptrconst_type(): parsing and processing
	of argument strings (moved in fromEye/MCW_View).

	3. peek_value(), stream_value(): peek at an address or stream a
	value using ROOT's value-type id; so far only Double_t supported
	as caller-side input/output type. This is useful for FLTK-style
	valuators which use double as internal storage.

	* Glasses/ZGlass.cxx:
	Fixed compilation warning.

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	Reworked logick for Render/glCallList selection during picking
	when sub-picking is advertised by the rendered object.

	* Glasses/WGlButton.cxx:
	* Glasses/WGlButton.h:
	* Glasses/WGlDirectory.cxx:
	Use GledNS::DeduceXY() methods.

	* Glasses/WGlValuator.cxx:
	* Glasses/WGlValuator.h:
	* Rnr/GL/WGlValuator_GL_Rnr.cxx:
	* Rnr/GL/WGlValuator_GL_Rnr.h:
	* glass.list:
	New glass WGlValuator, a GL widget for manipulating glass
	value data-members.
	
2005-07-22  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	Chanages for ROOT-5, backwards compatible.

2005-07-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* macros/demo_scene_elements.C:
	New file: contains creators of common complex scene elements.

2005-07-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Rewritten overlay event handling and delivery: now tries to
	deliver each event to the whole name-stack (belonging to the
	nearest selection hit).

	* Rnr/GL/GLRnrDriver.cxx:
	* Rnr/GL/GLRnrDriver.h:
	Added event-delivery state (mBelowMouse, mPushed, mFocus) and a flag
	(bRedraw) via which the renderers can signal a redraw request from
	DrawX or Handle.

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* Rnr/GL/ZGlass_GL_Rnr.h:
	Added Redraw method (signal to executor that the scene needs to be
	redrawn) and a flag bUsesSubPicking which prevents usage of
	display-lists during picking.

	* RnrBase/A_Rnr.h:
	Extened Fl_Event structure.

	* Glasses/ZNodeListLink.cxx:
	* Glasses/ZNodeListLink.h:
	* Rnr/GL/ZNodeListLink_GL_Rnr.cxx:
	* Rnr/GL/ZNodeListLink_GL_Rnr.h:
	Renamed to WGlDirectory (and changed substantially).

	* Glasses/WGlButton.cxx:
	* Glasses/WGlButton.h:
	* Rnr/GL/WGlButton_GL_Rnr.cxx:
	* Rnr/GL/WGlButton_GL_Rnr.h:
	New glass: a GL button with callback.

	* Glasses/WGlDirectory.cxx:
	* Glasses/WGlDirectory.h:
	* Rnr/GL/WGlDirectory_GL_Rnr.cxx:
	* Rnr/GL/WGlDirectory_GL_Rnr.h:
	Renamed from ZNodeListLink; much code moved to WGlFrameStyle and
	ZGlPerspective.

	* Glasses/WGlFrameStyle.cxx:
	* Glasses/WGlFrameStyle.h:
	* Rnr/GL/WGlFrameStyle_GL_Rnr.cxx:
	* Rnr/GL/WGlFrameStyle_GL_Rnr.h:
	New glass holding frame and label drawing parameters.

	* Glasses/ZGlPerspective.cxx:
	* Glasses/ZGlPerspective.h:
	* Rnr/GL/ZGlPerspective_GL_Rnr.cxx:
	* Rnr/GL/ZGlPerspective_GL_Rnr.h:
	New glass: modifies GL projection and modelview matrix for
	orthographic viewing.

	* glass.list:
	New glasses ZGlPerspective, WGlButton, WGlFrameStyle; renamed
	ZNodeListLink to WGlDirectory.

	* Rnr/GL/ZRlFont_GL_Rnr.cxx:
	* Rnr/GL/ZRlNodeMarkup_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModBase_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModBase_GL_Rnr.h:
	Renamed ZRnrModBase_GL_Rnr::ConsiderRebuildDL to
	update_tring_stamp and moved it to protected section.

	* Glasses/Text.cxx:
	* Glasses/Text.h:
	* Rnr/GL/Text_GL_Rnr.cxx:
	Added frame, removed control of polygon offset (defaults seem ok).

	* Stones/ZColor.h:
	Added member array() returning pointer to color array.

	* Glasses/ZNodeLink.h:
	Formatting changes.
	
2005-07-11  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZRlNameStack.cxx:
	* Glasses/ZRlNameStack.h:
	* Pupils/Pupil.cxx:
	* Rnr/GL/GLRnrDriver.cxx:
	* Rnr/GL/GLRnrDriver.h:
	* Rnr/GL/ZRlNameStack_GL_Rnr.cxx:
	Added support for clearing and restoring name-stack contents when
	disabling name-stack operations via ZRlNameStack.

2005-07-06  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Added methods RnrElmsOn/OffForDaughters().

2005-07-05  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlass.cxx:
	warn_caller(): added call to ISwarn as a fallback.

	* Stones/ZRCStone.cxx:
	* Stones/ZRCStone.h:
	New file: RefCounted Stone.

2005-07-04  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZRlNodeMarkup.cxx:
	* Glasses/ZRlNodeMarkup.h:
	Added Float_t members mAxeWidth and mAxeLength.

	* Rnr/GL/ZNode_GL_Rnr.cxx:
	In PostDraw use Axes paramaters from ZRlNodeMarkup.

	* Pupils/Pupil.cxx:
	Fixed some picking glitches.

	* Rnr/GL/GLTextNS.cxx:
	* Rnr/GL/GLTextNS.h:
	* GledView/GLTextNS.cxx:
	* GledView/GLTextNS.h:
	Moved GLTextNS.h/.cxx from GledView/ to Rnr/GL/.

	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/ScreenText_GL_Rnr.cxx:
	* Rnr/GL/ZNodeListLink_GL_Rnr.cxx:
	* Rnr/GL/ZRlFont_GL_Rnr.h:
	* Rnr/GL/ZRlNodeMarkup_GL_Rnr.h:
	Fixes include path of GLTextNS.h.

2005-07-03  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/CameraInfo.h:
	Extended ranges of view-variables.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Added control for max-pick-menu-length; extended ranges of
	view-variables.

	* Pupils/Pupil.cxx:
	Added support for max-pick-menu-length; added missing
	make_current() (GL context) call to Pick().

2005-06-29  Matevz Tadel  <matevz.tadel@ijs.si>

	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Added method 'PickTopNameStack' that returns whole name-stack for
	the first (closest to viewer) selection hit. Used in overlay event
	handling. Use new name-stack demangling from GLRnrDriver.

	* RnrBase/A_Rnr.h:
	Added struct NameStack_Entry (for picking support).

	* Rnr/GL/GLRnrDriver.cxx:
	* Rnr/GL/GLRnrDriver.h:
	Wrapped-up GL picking support; picking now based on
	A_Rnr::NameStack_Entry. GLRnrDriver constructs internal look-up
	vector.

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	Use new name-stack wrappers from GLRnrDriver.

	* Rnr/GL/ZNodeListLink_GL_Rnr.cxx:
	Use new name-stack wrappers from GLRnrDriver; use new event
	format with below-mouse-lens being deduced from
	user-data field of A_Rnr::NameStack_Entry. 

	* Glasses/ZRlNameStack.cxx:
	* Glasses/ZRlNameStack.h:
	* Rnr/GL/ZRlNameStack_GL_Rnr.cxx:
	* Rnr/GL/ZRlNameStack_GL_Rnr.h:
	* glass.list:
	New glass ZRlNameStack: control of name-stack use.

	* Makefile:
	Removed libGledCore_GL_Rnr.so from gled link-time deps.

	* Glasses/ZRlNodeMarkup.cxx:
	* Glasses/ZRlNodeMarkup.h:
	* Rnr/GL/ZRlNodeMarkup_GL_Rnr.cxx:
	* Rnr/GL/ZRlNodeMarkup_GL_Rnr.h:
	Varname consistency fix.

2005-06-28  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/MANIFEST:
	Removed.

	* Eye/GuiPupil.cxx:
	* Eye/GuiPupil.h:
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	* Eye/pbuffer.cxx:
	* Eye/pbuffer.h:
	Moved to directory Pupils/.

	* Pupils/GuiPupil.cxx:
	* Pupils/GuiPupil.h:
	* Pupils/pbuffer.cxx:
	* Pupils/pbuffer.h:
	* Pupils/Pupil.cxx:
	* Pupils/Pupil.h:
	Moved here from Eye/; these files now build into a separate
	library as they depend on FLTK and GL-render driver. GL rendering
	infrastructure is now completely decoupled from FLTK.
	Restructuring of picking code in Pupil.

	* Makefile:
	Added stuff for Pupils/ - generating libGledCore_Pupils.so.

	* Rnr/GL/GLRnrDriver.cxx:
	* Rnr/GL/GLRnrDriver.h:
	New file: subclass of RnrDriver. GL specific code (lamps, clipping
	planes) moved here from RnrDriver.

	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Moved GL specific code to new subclass GLRnrDriver. Added
	convenience method GL that bluntly casts this into GLRnrDriver.
	
	* macros/gled_view_globals.C:
	Load 'libGledCore_Pupils.so' during initialization.

	* Rnr/GL/Lamp_GL_Rnr.cxx:
	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/ZGlClipPlane_GL_Rnr.cxx:
	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	Use GLRnrDriver when needed.

	* Glasses/ZRlNameRnrCtrl.cxx:
	* Glasses/ZRlNameRnrCtrl.h:
	* Glasses/ZRlNodeMarkup.cxx:
	* Glasses/ZRlNodeMarkup.h:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.cxx:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.h:
	* Rnr/GL/ZRlNodeMarkup_GL_Rnr.cxx:
	* Rnr/GL/ZRlNodeMarkup_GL_Rnr.h:
	* GledView/GLTextNS.cxx:
	* glass.list:
	Renamed class ZRlNameRnrCtrl to ZRlNodeMarkup.

	* Net/Ray.h:
	Added method 'bool IsChangeOf(FID_t fid)'.

2005-06-24  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Pupil.cxx:
	* RnrBase/A_Rnr.cxx:
	* RnrBase/A_Rnr.h:
	Added string from Fl::event_text() to Fl_Event.

	* Glasses/ZNameMap.cxx:
	* Glasses/ZNameMap.h:
	Added boolean members bReplaceOnInsert=true and
	bReplaceOnRename=false controlling behaviour in case of name
	conflicts. Adding an element with conflicting name will now remove
	the old element.

	* Eye/FltkGledStuff.cxx:
	LinkNameBox: display link-type when link is not set.

	* Glasses/ZNodeLink.h:
	Formatting.

2005-06-23  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	Added protected method 'warn_caller()'. If mir is being executed,
	a warning message is sent to the caller.

	* Eye/Eye.cxx:
	* Glasses/EyeInfo.cxx:
	* Glasses/EyeInfo.h:
	* Glasses/SaturnInfo.cxx:
	* Glasses/SaturnInfo.h:
	* Glasses/ZMirEmittingEntity.h:
	* Net/Ray.h:
	Added 'Warning()' method to ZMirEmittingEntity and sub-classes.

	* RnrBase/RnrDriver.h:
	Wiped obsolete declaration of TexFont.

2005-06-23  Matevz Tadel  <matevz.tadel@ijs.si>

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Consolidation of rendering into display lists; ZGlass_GL_Rnr
	uses RnrDriver::bInDLRebuild to announce DL capture is in
	progress. This should allow DL captures to spawn across several
	renderers and thus include larger chunks of a scene graph.

	* Glasses/Cylinder.cxx:
	* Glasses/Cylinder.h:
	* Rnr/GL/Cylinder_GL_Rnr.cxx:
	* Rnr/GL/Cylinder_GL_Rnr.h:
	Added member 'Float_t mPhiOffset' allowing rotation around central
	axis in edge-angle units.

2005-06-22  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	* Eye/FTW_SubShell.cxx:
	* Eye/FTW_SubShell.h:
	* Eye/GuiPupil.cxx:
	* Eye/GuiPupil.h:
	Consolidated handling of window-titles for
	sub-shells. FTW_SubShell now holds the label in 'std::string
	mWindowLabel' and provides virtual method 'label_window(const
	char*)'.
	
	* Stones/ZTrans.cxx:
	Changed Invert() with InvertFast().

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Added method 'MakeRnrModList()' to facilitate management of
	RnrMods.

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Added preliminary support for interactive overlay and X-event
	delivery into renderers.

	Added 'ZoomFac' method for changing ZFov or ZSize. It uses
	exponential model and is now the default. 'Bool_t
	PupilInfo::bZoomByFac' controls the behaviour.

	* Glasses/ZNodeListLink.cxx:
	* Glasses/ZNodeListLink.h:
	* Rnr/GL/ZNodeListLink_GL_Rnr.cxx:
	* Rnr/GL/ZNodeListLink_GL_Rnr.h:
	New files: protoype of list rendering. So far only supports
	rectangular 3D-grid display (see demos/Geom1/metagui_test.C).
	
	* RnrBase/A_Rnr.h:
	Added nested struct Fl_Event (looks a lot like FLTK event but is
	fully contained in the Gled-rendering sub-system.

	* RnrBase/Fl_Event_Enums.h:
	New file: copy of relevant parts of FLTK Enumerations.H.

	* RnrBase/RnrDriver.h:
	Added member 'Float* mProjBase' holding a copy of projection
	matrix prior to setting of viewing frustum. This is identity,
	unless picking is active: by accessing this information renderers
	switching into ortho-mode (eg. some text renderers) can still use
	picking.

	* GledView/GLTextNS.cxx:
	* GledView/GLTextNS.h:
	New variant of txfRenderString that takes max x-width of text as
	an argument (fades-out when approaching it); use projection base
	from RnrDriver when setting orthographic projection (required for
	picking to work on rendered text).

	* Rnr/GL/SphereTrings.cxx:
	* Rnr/GL/SphereTrings.h:
	New function UnitBox().

	* Rnr/GL/ZGlass_GL_Rnr.h:
	Added nested class 'GL_Capability_Switch' to ease
	enabling/disabling of GL capabilities.

	* Rnr/GL/Cylinder_GL_Rnr.h:
	* Rnr/GL/GlobalLamps_GL_Rnr.cxx: 
	* Rnr/GL/LampLink_GL_Rnr.cxx:
	* Rnr/GL/Lamp_GL_Rnr.cxx:
	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/SEvTaskState_GL_Rnr.cxx:
	* Rnr/GL/Scene_GL_Rnr.cxx:
	* Rnr/GL/ScreenText_GL_Rnr.cxx:
	* Rnr/GL/Sphere_GL_Rnr.h:
	* Rnr/GL/Text_GL_Rnr.cxx:
	* Rnr/GL/ZGlBlending_GL_Rnr.cxx:
	* Rnr/GL/ZGlClipPlane_GL_Rnr.cxx:
	* Rnr/GL/ZGlLightModel_GL_Rnr.cxx:
	* Rnr/GL/ZGlMaterial_GL_Rnr.cxx:
	* Rnr/GL/ZNodeLink_GL_Rnr.cxx:
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	* Rnr/GL/ZRlFont_GL_Rnr.cxx:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModBase_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModList_GL_Rnr.cxx:
	Changed include FL/gl.h to GL/gl.h.

	* glass.list:
	Added new glass ZNodeListLink.

	* perllib/GLED_Widgets.pm:
	Somewhat improved max-width determination for Value weed.

2005-06-08  Matevz Tadel  <matevz.tadel@ijs.si>

	* RnrBase/PMSEntry.cxx:
	ToGCS: return local matrix instead of previously cached value if
	fPrev is not set.

	* RnrBase/RnrDriver.h:
	Bugfix: PMSEntry::fPrev was not set in RnrDriver::PushPM().

2005-06-08  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Added PostMIR with MIR* argument.

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	Changed default moon-connection/autorization settings (two
	command line options changed); added wrappers for macro
	loading and execution that guarantee consistent state of global
	variables declared in them.

	Do NOT use authentication by default. New option '-auth';
	'-noauth' option no longer recognized.
	
	Do NOT allow moon connections by default. New option
	'-allowmoons'; '-nomoons' option no longer recognized.

	Added macro executing/loading static methods that check if the
	macro has been already loaded (to avoid reloading and resetting
	of global-variables declared in that file). These are now used by
	standard startup steering scripts and demos.

	Turned AssertLibSet into static method.

	Added global variable 'Gled* gGled' (slight ROOT symmetry).

	* catalog.patch:
	Export global 'Gled* gGled' from Gled.

	* macros/eye.C:
	* macros/moon.C:
	* macros/sun.C:
	Cleaned-up startup steering. Globals are now declared in
	'gled_globals.C' and 'gled_view_globals.C'. Use new static
	functions from Gled for macro loading.

	* macros/sun_demos.C:
	* macros/gled_globals.C:
	* macros/gled_view_globals.C:
	New files for startup steering.

	* Rnr/GL/LampLink_GL_Rnr.cxx:
	* Rnr/GL/LampLink_GL_Rnr.h:
	* Rnr/GL/Lamp_GL_Rnr.cxx:
	Cleaned-up warnings about non-connected routes between nodes.

2005-06-06  Matevz Tadel  <matevz.tadel@ijs.si>

	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	Clean-up and extension of the interface.

	* Glasses/ZNode.h:
	Added retransform flag 't' to export options of scaling variables.
	
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	* Rnr/GL/ZNode_GL_Rnr.h:
	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Redid Position Matrix Stack handling.

	* RnrBase/PMSEntry.cxx:
	* RnrBase/PMSEntry.h:
	New files: Position Matrix Stack Entry (implemented in RnrDriver
	before).

	* Rnr/GL/LampLink_GL_Rnr.cxx:
	Additional protection during global position determination.

	* perllib/GLED_Widgets.pm:
	Trans_Pos/Rot_Ctrl: use different getter from ZTrans.
	
	* Stones/Z3Mark.cxx:
	* Stones/Z3Mark.h:
	* Stones/Z3Point.cxx:
	* Stones/Z3Point.h:
	* Stones/ZMark.cxx:
	* Stones/ZMark.h:
	Removed obsolete files.

2005-06-04  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Shell.cxx:
	Fixed resizing bug introduced by collapsable Source and Sink.

2005-06-02  Matevz Tadel  <matevz.tadel@ijs.si>

	* gled.cxx:
	* saturn.cxx:
	Moved GledCore_init and PreExec before spawning of TRint.

2005-06-02  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/Gled.cxx:
	* Gled/Gled.h:
	Added command line option '-preexec' to allow execution of macros
	prior to spawning saturn or normal command line macro processing.

	* gled.cxx:
	* saturn.cxx:
	Added optional call to Gled::PreExec.

2005-06-02  Matevz Tadel  <matevz.tadel@ijs.si>

	* perllib/GLED_Widgets.pm:
	Added '-whanchanged' option handling to Filor weed.

2005-06-01  Matevz Tadel  <matevz.tadel@ijs.si>

	* perllib/GLED_Widgets.pm:
	Added weed HexValue.

2005-06-01  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	Sanitized error reporting from MIR handling (removed saturn name
	since saturn's identity is sent in Caller variable of the reportin
	MIR anyway); DEBUG-ifdefed verbose reporting in thread-exec
	functions tl_MIR_Router and tl_MIR_DetachedExecutor.

	* Glasses/ShellInfo.cxx:
	* Glasses/ShellInfo.h:
	Added members 'Bool_t bDefSourceVis, bDefSinkVis'; increased
	default sub-shell height (22->28) and decreased default message
	output height (7->5).

	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	Added support for toggling source/sink widgets on and off (in new
	View menu). Honour value of ShellInfo::bDefSource/SinkVis on
	construction time.

2005-05-30  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	* Glasses/SaturnInfo.cxx:
	* Glasses/SaturnInfo.h:
	* Gled/Gled.cxx:
	Added SaturnInfo::mServPortScan and option '-portscan' allowing to
	search for next free server port in the specified range.

2005-05-27  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Nest.cxx:
	Bugfix: child(0) of mPack (scrollbar) was reached via
	arrow-up/down keys and caused segv.

	* perllib/GLED_Widgets.pm:
	Added Textor::make_weed_update to refresh widget only if the value
	string is different and to fix cursor position to the end
	afterwards (instead of selecting the whole string).

2005-05-26  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlBlending.cxx:
	Changed point, line and fog hints to fastest.

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	Added methods MIRActivateLens and MIRDeactivateLens.

	* Glasses/Cylinder.cxx:
	* Glasses/Cylinder.h:
	* Rnr/GL/Cylinder_GL_Rnr.cxx:
	Added enum/member orientation; renamed height variable from mLodZ
	to mLodH.

	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	Renamed spawn_metagui to SpawnMetaView.

2005-05-26  Matevz Tadel  <matevz.tadel@ijs.si>

	* gled.cxx:
	* saturn.cxx:
	Added try-block around command-line macro processing. 

2005-05-19  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Added RouteMIR with MIR* argument.

	* macros/sun.C:
	Creation of Scenes queen now optional.

2005-05-18  Matevz Tadel  <matevz.tadel@ijs.si>

	* Makefile:
	Removed directory Tvor.

	* Rnr/GL/TubeTvor_GL_Rnr.cxx:
	* Rnr/GL/TubeTvor_GL_Rnr.h:
	* Tvor/TubeTvor.cxx:
	* Tvor/TubeTvor.h:
	Moved to Geom1.

2005-05-17  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Branch.cxx:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	FTW_Nest now uses Fl_ScrollPack from fltk-mt as a vertical
	browser. The limitation on length (due to Fl_Widget::x,y being
	short integers) is thus removed.

2005-05-14  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Pupil.cxx:
	Export absoulte camera transformation to RnrDriver in Render().

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Added method ApplyScale(ZTrans& t).

	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Extended position-matrix stack to hold transformations to/from
	global coordinate system. The transformations are only constructed
	when requested and then cached. New member 'ZTrans* mAbsCamera';
	must be set from outside.

	* Rnr/GL/GlobalLamps_GL_Rnr.cxx:
	* Rnr/GL/LampLink_GL_Rnr.cxx:
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	Followup to changes in RnrDriver position-matrix stack. 

2005-04-21  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlBlending.cxx:
	* Glasses/ZGlBlending.h:
	* Rnr/GL/ZGlBlending_GL_Rnr.cxx:
	Added controls for depth-buffer.

2005-04-21  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Added support for multi-frame screenshots; screenshots now
	rendered via pbuffers.

	* Eye/pbuffer.cxx:
	* Eye/pbuffer.h:
	New files: taken from comp.graphics.api.opengl, by Wolfgang
	Draxinger.

	* Glasses/Lamp.cxx:
	* Glasses/Lamp.h:
	Formatting changes.

	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Added support for clipping-plane management.

	* Glasses/ZGlClipPlane.cxx:
	* Glasses/ZGlClipPlane.h:
	* Rnr/GL/ZGlClipPlane_GL_Rnr.cxx:
	* Rnr/GL/ZGlClipPlane_GL_Rnr.h:
	* glass.list:
	New glass ZGlClipPlane: an interface to GL clipping plane.

2005-04-18  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Ant.cxx:
	* Eye/FTW_Leaf.cxx:
	* Eye/FltkGledStuff.cxx:
	Downscaled expand/collapse symbol labels.

	* Eye/FTW_Branch.cxx:
	Deny expansion of lists longer that 1024 elements; downscaled
	expand/collapse symbol labels.

	* Eye/FTW_Nest.cxx:
	Added 'Import Kings' to View menu.

	* Eye/FTW_Shell.cxx:
	Minor changes.

	* Eye/MCW_Button.cxx:
	Tooltip string was not constructed properly.

	* Eye/MCW_View.cxx:
	Delete the window on receiving FL_HIDE event.

	* Eye/MTW_SubView.cxx:
	* Eye/MTW_SubView.h:
	Added 'static const Text_t* sTextorTooltip' advising users to
	press the Enter key to send the typed value.

	* Glasses/SubShellInfo.cxx:
	* Glasses/SubShellInfo.h:
	Added members 'Int_t mDefW, mDefH' specifying size of the
	sub-shell-window on startup. Must be honoured by the actual
	sub-shell spawning function.

	* perllib/GLED_Widgets.pm:
	Filor weed extended with several options.
	'-whenchanged' make callback on every change.
	'-abs'         return absolute pathnames.
	'-dir'         select directories, not files.

2005-04-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/MTW_MetaView.cxx:
	* Eye/MTW_MetaView.h:
	* Glasses/MetaSubViewInfo.cxx:
	* Glasses/MetaSubViewInfo.h:
	Added offset variables for each MetaSubView. This should make
	packing of elements somewhat more natural.

2005-04-12  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/MetaSubViewInfo.cxx:
	* Glasses/MetaSubViewInfo.h:
	* Glasses/MetaViewInfo.cxx:
	* Glasses/MetaViewInfo.h:
	* Glasses/MetaWeedInfo.cxx:
	* Glasses/MetaWeedInfo.h:
	* glass.list:
	New glasses ('MetaViewInfo', 'MetaSubViewInfo' and 'MetaWeedInfo')
	for lens-tree representation of custom lens-view GUIs.

	* Glasses/ShellInfo.cxx:
	* Glasses/ShellInfo.h:
	Added method SpawnMetaGui and accompanying custom ray.

	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	Cleaned-up to represent common behaviour; implementation of view
	building process moved to 'MTW_ClassView'.

	* Eye/MTW_Layout.cxx:
	* Eye/MTW_Layout.h:
	* Eye/MTW_SubView.h:
	Interface regularization.

	* Eye/MTW_ClassView.cxx:
	* Eye/MTW_ClassView.h:
	* Eye/MTW_MetaView.cxx:
	* Eye/MTW_MetaView.h:
	New files. Sub-classes of MTW_View. MTW_ClassView is what MTW_View
	used to be, MTW_MetaView is a new incarnation that can be built
	from MetaView-lens-graph.

	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	Added member spawn_metagui(); changes due to MTW_View split.

	* Eye/FTW_Leaf.cxx:
	* Eye/FTW_Leaf.h:
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Changes due to MTW_View split.

	* Eye/FltkGledStuff.cxx:
	Fixed parent resizing in PackEntryCollapsor::collexp().

	* GledView/GledViewNS.cxx:
	* GledView/GledViewNS.h:
	ClassInfo::FindWeedInfo(): better handling of recursion arguments.

	* Stones/ZColor.h:
	constified to_ubyte() and rgb_to_ubyte().

	* perllib/GLED_Widgets.pm:
	Trans weeds set label to 0 instead of setting label-type to
	no-label.

2005-04-08  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	Start server thread before service threads (got sporadic segvs
	when port was already used). Minor forformatting changes.

	* Eye/Pupil.cxx:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Added option to display some view-related information.

	* Glasses/ZRlNameRnrCtrl.cxx:
	* Glasses/ZRlNameRnrCtrl.h:
	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.cxx:
	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Renamed Rnrdriver::bRnrNames to bMarkupNodes; added option to
	display coordinate axes. ZRlNameRnrCtrl should be eventually
	renamed to ZRlNodeMarkupCtrl.

2005-04-08  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZFireQueen.cxx:
	Create 'Etc' directory on bootstrap.

	* Glasses/ZIdentity.cxx:
	* Glasses/ZIdentity.h:
	* Glasses/ZSunQueen.cxx:
	Type fix: ZIdentity::mActiveMMEs changed to mActiveMEEs.
	MEE ~ Mir Emitting Entity.

	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	Added methods for creation of sub-directories (AssertPath()) and
	insertion of lenses into sub-directories (Swallow(), to be used
	for configuration-entry registration during
	start-up). Copy-methods now return the TimeStamp.

	* Gled/Gled.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	* GledView/GledViewNS.cxx:
	* GledView/GledViewNS.h:
	Removed MTWLayout handling.

	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	Added functions 'string join_strings(const string& sep, lStr_t&
	list)' and 'void remove_whitespace(string& s)'.

	* Eye/Eye.h:
	Removed data member mQueen; was not used anywhere.

	* Eye/FTW.cxx:
	Added check for image existence in NameButton::handle().

	* Eye/FTW_Branch.cxx:
	* Eye/FTW_Branch.h:
	Added timestamp of FTW::Leoim creation; leoim list is only created
	when the branch is expanded.

	* Eye/FTW_Nest.cxx:
	* Glasses/NestInfo.cxx:
	* Glasses/NestInfo.h:
	Custom-layout handling now goes via lens-directory mechanism.

	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	* Glasses/ShellInfo.cxx:
	* Glasses/ShellInfo.h:
	Window-size and text-message handling improved. FTW_Shell now
	provides directory-entry search with fallback to his queen and
	fire_queen. 'Etc' directory is created ad enlightenment.

	* macros/eye.C:
	Use new nest-layout registration mechanism.

	* Eye/FltkGledStuff.cxx:
	* Eye/FltkGledStuff.h:
	LensChoiceMenuBox extended to also take lens-directory-path as a
	fall-back when the source of the menu-config-list is empty.

	* Eye/GuiPupil.cxx:
	* Glasses/GuiPupilInfo.cxx:
	* Glasses/GuiPupilInfo.h:
	Improved handling of low-level pupil.

	* Eye/MTW_Layout.cxx:
	Remove white-space from the layout string prior to parsing.

	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	Added Labelofy() method; UpdateXYZ() methods no longer assume a
	single sub-view for a given glass.

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Fullscreen handling extended to also work in a swallowed-window
	mode.

	* Stones/ZColor.h:
	Added rgb_to_ubyte() method.

	* Tvor/TubeTvor.cxx:
	* Tvor/TubeTvor.h:
	* Rnr/GL/TubeTvor_GL_Rnr.cxx:
	Use UChar_t (instead of Float_t) for color-arrays. What was i
	thinking?

	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/Text_GL_Rnr.cxx:
	* Rnr/GL/Text_GL_Rnr.h:
	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* Rnr/GL/ZGlass_GL_Rnr.h:
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	* Rnr/GL/ZRlFont_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModBase_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModBase_GL_Rnr.h:
	* Rnr/GL/ZRnrModList_GL_Rnr.cxx:
	* RnrBase/A_Rnr.h:
	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	RnrMod moved out of RnrDriver (to A_Rnr.h); RnrModStore introduced
	to allow timestamp-based tracking of rnrmod changes in
	'rnrmod-consumers'. This is most likely the final design of rnrmod
	infrastructure.

	* Makefile:
	Added stuff for RegExp compilation and registration.

	* Readme_GledCore:
	Mention origin of RegExp and GledView/GLTextNS.

	* Eye/MTW_SubView.cxx:
	* Eye/OptoStructs.h:
	* Glasses/PupilInfo.h:
	Minor changes.

	* RegExp/Makefile:
	* RegExp/pcre.h:
	* RegExp/pcre/chartables.c:
	* RegExp/pcre/config.h:
	* RegExp/pcre/get.c:
	* RegExp/pcre/internal.h:
	* RegExp/pcre/pcre.c:
	* RegExp/pcre/study.c:
	* RegExp/pme.h:
	* RegExp/pme/config.h:
	* RegExp/pme/pme.cpp:
	New files; stripped down import of PCRE-5.0 and PME-1.0.3.

2005-04-01  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	Added a virtual base class ImageConsumer. Fixed memory leak in
	image destruction.

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	Added handling of ImageConsumers; notify them upon death of an
	image so they can remove corresponding data.

	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	RnrDriver is now a sub-class of OptoStructs::ImageConsumer. This
	allows proper destruction of renderers local to the driver.

	* Rnr/GL/ZRlFont_GL_Rnr.cxx:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModBase_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModBase_GL_Rnr.h:
	Cleaned-up RnrMod management; new changes coming soon.

	* perllib/GLED_Widgets.pm:
	Filor: added handling of '-pat' option to specify default
	file-name matching pattern.

	* Glasses/ZRlFont.h:
	Added default pattern '*.txf' to Filor weed for mFontName.

2005-03-23  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Leaf.cxx:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	* Glasses/NestInfo.cxx:
	* Glasses/NestInfo.h:
	Moved nest-element width control to NestInfo glass.

	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	New option 'bool show_p' to spawn_subshell(); shell now expects
	that all passed sub-shells are first registered in
	ShellInfo::mSubShells; split MCW_View creation into two methods.

	* Eye/FltkGledStuff.cxx:
	* Eye/FltkGledStuff.h:
	New class LensChoiceMenuBox.

	* Eye/MCW_Button.cxx:
	* Eye/MCW_Button.h:
	New files; fltk widget of MCWButt weed.

	* Eye/MCW_View.cxx:
	* Eye/MCW_View.h:
	Blessed split_argument() and unrefptrconst_type() from anonymous
	namespace to static members.

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	New method 'ZLinkDatum*ZGlassImg::GetLinkDatum(const string& lnk_name)'.

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Added privete _build() method; create ctx-holder from Pupil
	constructor, not static Create_Pupil(); recalculate camera
	position upon receiving camera-home ray.

	* Eye/GuiPupil.cxx:
	* Eye/GuiPupil.h:
	New class: fltk wrapper around Pupil, steered by GuiPupilInfo
	glass.

	* Glasses/CameraInfo.cxx:
	* Glasses/CameraInfo.h:
	New glass: full information about camera handling and viewing
	volume.

	* Glasses/GuiPupilInfo.cxx:
	* Glasses/GuiPupilInfo.h:
	New glass: representation of a more customizable Pupil adorned
	with gui (so far menu but possibly other things will be added).
	Preliminary implementation.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Added method ImportCameraInfo(CameraInfo*); fixed Zoom() to call
	set-methods and thus honour value-ranges; some code
	reorganization.

	* Glasses/ShellInfo.cxx:
	Default sub-shell assignment first asserts that the argument is an
	element of it SubShells (adds it if necessary). This allows cleaner
	handling of sub-shell windows on the gui side, especially in view
	of sub-shell swallowing.

	* Glasses/ZRnrModBase.h:
	Offset the Operation_e initialization to -1. This makes
	initialization via integers much easier to read.

	* Rnr/GL/GlobalLamps_GL_Rnr.cxx:
	* Rnr/GL/GlobalLamps_GL_Rnr.h:
	Disabled use of name-stack.

	* glass.list:
	New glasses GuiPupilInfo and CameraInfo.

	* macros/glass_defines.h:
	Added macros ASSIGN_ADD/ATT_GLASS.

	* perllib/GLED_Widgets.pm:
	Added weed-class MCWButt.

2005-03-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	New method Zoom; renamed viewing-rectangle specification variables
	and added 'typical object distance'. With it one can calculate
	view height (orthographic mode) from vertical FOV (perspective
	mode) and vice versa.

	* Eye/Pupil.cxx:
	Follow up on changes in PupilInfo; mousewheel events now call
	PupilInfo::Zoom(). Shift increases the step, control decreases it.

2005-03-15  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Branch.cxx:
	* Eye/FTW_Branch.h:
	* Eye/FTW_Leaf.h:
	Added virtual method CopyListLeaves(list<FTW_Leaf*>& list).

	* Glasses/NestInfo.cxx:
	* Glasses/NestInfo.h:
	Added members 'Bool_t bShowSelf' and 'Int_t mMaxChildExp'.

	* Eye/FTW_Nest.cxx:
	Honour bShowSelf and mMaxChildExp during nest construction.

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Added methods RnrOn/OffForDaughters. Actually moved them in from
	RootGeo's ZGeoNode glass.

	* macros/glass_defines.h:
	Added define CREATE_ATT_GLASS to support different attachment
	scenarios. Usefull for setting links or using alternate
	add-methods.

2005-03-12  Matevz Tadel  <matevz.tadel@ijs.si>

	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	Added function FindSymbol() that uses dlsym. CINT's
	G__findsym has problems with finding symbols from libraries linked
	at 'compile-time' until it loads the first library
	itself. Probably some initialization is missing.

	* Eye/FTW_Shell.cxx:
	* GledView/GledGUI.cxx:
	Use GledNS::FindSymbol to find symbols from shared libraries.

	* Eye/FltkGledStuff.cxx:
	* Eye/FltkGledStuff.h:
	MenuBox: added member to hold Fl_Menu_Button; need to send
	FL_SHORTCUT events to it as well.

	* Glasses/Cylinder.cxx:
	* Glasses/Cylinder.h:
	* Rnr/GL/Cylinder_GL_Rnr.cxx:
	* Rnr/GL/Cylinder_GL_Rnr.h:
	* glass.list:
	From Alja: new glass Cylinder. A generic interface to gluCylinder.

2005-03-11  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	* Eye/FTW.cxx:
	* Eye/FTW.h:
	* Eye/FTW_Leaf.cxx:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	* Eye/FTW_SubShell.cxx:
	* Eye/FTW_SubShell.h:
	* Eye/FltkGledStuff.cxx:
	* Eye/FltkGledStuff.h:
	* Eye/MCW_View.cxx:
	* Eye/MCW_View.h:
	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	* Glasses/EyeInfo.h:
	* Glasses/NestInfo.cxx:
	* Glasses/NestInfo.h:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	* Glasses/ShellInfo.cxx:
	* Glasses/ShellInfo.h:
	* Glasses/SubShellInfo.cxx:
	* Glasses/SubShellInfo.h:
	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	* GledView/GledViewNS.cxx:
	* GledView/GledViewNS.h:
	Restructuring of Eye / Shell / SubShell (Nest, Pupil) relations.
	NestInfo and PupilInfo subclass SubShellInfo.
	ShellInfo is now ZNameMap (to hold various config data) and has a
	link to default subshell and to a list of subshells (asymmetry in
	Nests/Pupils has been removed).
	FTW_Shell subclasses Eye; thus it gains control over ZGlassImg
	creation and network traffic. ShellInfo can not inherit from
	EyeInfo as EyeInfo objects are instantiated by SunQueen at
	SunAbsolute and Shell would thus lose its local nature.
	Pupil and FTW_Nest now subclass (among other things) FTW_SubShell.
	FTW_Shell can swallow any sub-shell within its main canvas.

	This allowed for some other improvements and code cleanup.	
	
	* GledView/user_init.cxx:
	Added creation of box-type for rendering menus.

	* glass.list:
	New glass SubShellInfo.

	* macros/eye.C:
	Fixed creation of default Shell.

	* Glasses/SaturnInfo.h:
	Minimal fix of class-view layout.

	* Glasses/ZGlass.cxx:
	Made SetGuard look like auto-generated Set methods for links.

	* Glasses/ZQueen.cxx:
	Added check for MIR-activity of target in
	Instantiate/IncarnateWAttach.

2005-03-01  Matevz Tadel  <matevz.tadel@ijs.si>

	* RnrBase/A_Rnr.h:
	Added member bool bOnePerRnrDriver; signals to rnr-driver to hold
	its own instance of the rnr (used by some ZRnrModBase
	descendants).

	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Extenison of RnrMod infrastructure. Added member UInt_t mRnrCount
	(used to identify one rendering) and methods
	Begin/EndRender. Support for having own renderers
	(based on bool A_Rnr::bOnePerRnrDriver). Font-support entirely
	moved to ZRlFont.

	* Glasses/ZGlStateBase.cxx:
	* Glasses/ZGlStateBase.h:
	* Glasses/ZRnrModBase.cxx:
	* Glasses/ZRnrModBase.h:
	Renamed ZGlStateBase to ZRnrModBase.

	* Rnr/GL/ZRnrModBase_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModBase_GL_Rnr.h:
	New file.
	
	* glass.list:
	Renamed ZGlStateBase to ZRnrModBase; ZRnrModBase has its own rnr now.

	* Eye/Pupil.cxx:
	Moved pre/post rendering light control to
	RnrDriver::Begin/EndRender.

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	New member Bool_t bUseDispList. Provides support for control of
	rendering via GL display-lists.

	* Glasses/Text.cxx:
	* Glasses/Text.h:
	Removed member bUseDispList (now in ZGlass).

	* Glasses/ZGlBlending.cxx:
	* Glasses/ZGlBlending.h:
	* Glasses/ZGlLightModel.cxx:
	* Glasses/ZGlLightModel.h:
	* Glasses/ZGlMaterial.cxx:
	* Glasses/ZGlMaterial.h:
	* Glasses/ZRlFont.cxx:
	* Glasses/ZRlFont.h:
	* Glasses/ZRlNameRnrCtrl.cxx:
	* Glasses/ZRlNameRnrCtrl.h:
	Now sub-classed from ZRnrModBase.

	* GledView/GLTextNS.cxx:
	* GledView/GLTextNS.h:
	Use new rnr-mod infrastrucure; added wrapper RnrTextBar(rnrdriver,
	text) that takes default box/zoffset from rnr-mods.

	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	Changed management of default font in sync with changes elsewhere.
	
	* Rnr/GL/Text_GL_Rnr.cxx:
	* Rnr/GL/Text_GL_Rnr.h:
	Changed font retrieval; now properly regenerates display lists
	whenever the font (obtained from RnrMods) changes.

	* Rnr/GL/ZRlFont_GL_Rnr.cxx:
	* Rnr/GL/ZRlFont_GL_Rnr.h:
	Now sub-classed from ZRnrModBase_GL_Rnr; shows also how to enforce
	rebuild of display-lists of clients to RnrMods (see also
	Text_GL_Rnr).
	
	* Rnr/GL/ZGlBlending_GL_Rnr.cxx:
	* Rnr/GL/ZGlBlending_GL_Rnr.h:
	* Rnr/GL/ZGlLightModel_GL_Rnr.cxx:
	* Rnr/GL/ZGlLightModel_GL_Rnr.h:
	* Rnr/GL/ZGlMaterial_GL_Rnr.cxx:
	* Rnr/GL/ZGlMaterial_GL_Rnr.h:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.cxx:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.h:
	Now sub-classed from ZRnrModBase_GL_Rnr.

	* Rnr/GL/ZNode_GL_Rnr.cxx:
	Removed retrieval of ZRlNameRnrCtrl rnr-mod; now done in GLTextNS.
	
	* Eye/FTW.cxx:
	Fixed compilation warnings.

2005-02-25  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/MTW_View.cxx:
	Top-bar in class-view now accepts paste events and dnd: the pasted
	lens is appended to the end of the list.

2005-02-23  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ShellInfo.cxx:
	* Glasses/ShellInfo.h:
	Added members bCollZGlass and bCollZList controlling inital
	collapse state of ZGlass and ZList sub-views.

	* Eye/MTW_View.cxx:
	Added top-bar for class-view (provides drag-out and right-mouse
	context menu); honour collapse status for ZGlass/ZLink as set in
	ShellInfo.

2005-02-20  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW.cxx:
	Bugfix in Source_Selector generate_MIR.

	* Eye/FltkGledStuff.cxx:
	* Eye/FltkGledStuff.h:
	Added Clear method and a menu callback to invoke it.

	* Eye/MTW_View.cxx:
	Bugfix in BuildVerticalView: mShell undefined for stand-alone
	lenses (segv during query for fancy/showdefaults setting).

	* Eye/Pupil.cxx:
	Moved delarations of picking menu to inner scope.

	* Glasses/ShellInfo.cxx:
	bShowLinksInClassView true by default.

2005-02-18  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ShellInfo.cxx:
	* Glasses/ShellInfo.h:
	Added members bFancyClassView and bShowLinksInClassView.

	* Eye/MTW_SubView.cxx:
	* Eye/MTW_SubView.h:
	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	Added class titles with collapsors to class-view; its general
	layout is now guided by ShellInfo members.

	* Eye/Pupil.cxx:
	Pupil now raises-on-click.

2005-02-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	SpawnMTW_View has been extended to allow caller to specify window
	position.

	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	Bugfix: before deleting mWindow should unregister self from it.

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Left double-click now spawns class-view for clicked object
	(pick-menu not shown) with position calculated as specified in
	PupilInfo::mPopup* variables. 

2005-02-16  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Leaf.cxx:
	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	* Eye/FltkGledStuff.cxx:
	* Eye/FltkGledStuff.h:
	* Eye/MCW_View.cxx:
	* Eye/MCW_View.h:
	* Eye/MTW_SubView.cxx:
	* Eye/MTW_SubView.h:
	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	MTW_View and supporting infrastructure updated to allow mixing of
	data members and links. Eventually should furhter extend the code
	to also allow reuse of FTW_Ants within a FTW_Leaf (and thus
	support link collapse/expand in FTW_Nest).

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	ZGlassImg::fFullMTW_View now a pointer to MTW_View; no need to
	delete it anymore.

	* Eye/MTW_Layout.cxx:
	Fixed compilation warning.

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	CameraView creation changed in accordance with MTW_View changes.

	* GledView/GledViewNS.h:
	Added 'bool WeedInfo::bIsLinkWeed'.

	* perllib/GLED_Widgets.pm:
	Added weed-class 'Link'.

	* Glasses/ZList.h:
	Added 'X{Ed}' pragma for RemoveLensesViaQueen().

2005-02-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	Moved FTW_Nest::RemoveTransients to FTW_Shell::RemoveMTW_Views;
	added a set of Images with opened MTW_Views to FTW_Shell. Now
	remove transients from Nest's menu really erases ALL transients.

2005-02-12  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	* Glasses/Text.cxx:
	* Glasses/Text.h:
	* Glasses/ZRlFont.cxx:
	* Glasses/ZRlFont.h:
	* Glasses/ZRlNameRnrCtrl.cxx:
	* Glasses/ZRlNameRnrCtrl.h:
	* GledView/GLTextNS.cxx:
	* GledView/GLTextNS.h:
	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/PupilInfo_GL_Rnr.h:
	* Rnr/GL/Text_GL_Rnr.cxx:
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	* Rnr/GL/ZRlFont_GL_Rnr.cxx:
	* Rnr/GL/ZRlFont_GL_Rnr.h:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.cxx:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.h:
	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	GL-text rendering now uses RnrDriver::RnrMod infrastructure. All
	text and tile properties have been removed from PupilInfo and
	RnrDriver.

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	Added methods ReTriangulate() and RebuildRnrScheme().

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	Render() method now empty.

	* Gled/GledTypes.h:
	Added method FID_t::clear().

2005-02-10  Matevz Tadel  <matevz.tadel@ijs.si>

	A_Rnr was made a sub-class of A_View. Now renderes produce their
	own RnrSchemes (the default method in A_Rnr still does what
	RnrDriver did before) and have direct access to the Eye, which
	simplifies storage of, and access to, default lens renderers. As
	all A_Views, A_Rnrs now receive Rays and can update their own
	RnrSchemes when appropriate.
	
	This allows for purer (and much more powerfull) implementation of
	rendering process.

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	Major clean-up: restructuring of rendering support.

	A_GlassView, ZGlassView and ZListView classes have been removed:
	they were only used by RnrDriver to obtain default
	renderers. Before i was hoping to provide per-pupil customization
	of rendering process via A_GlassView descendants. Now this can be
	achieved by extension of RnrDriver (hopefully).

	Extended ZLinkDatum to hold fToGlass and fToImg. ZLinkView has
	been retained as a base-class for cases where update of
	link-related data is expensive (used by FTW_Ant).

	A_View now automatically checks itself in/out of
	ZGlassImg; SetImg() is provided for cases when one wants to change
	the observed lens (used by some widgets).

	ZGlassImg: removed link-views and default view, added
	default-rnr. Also added methods Pre/PostAbsorption(Ray&) which are
	called by the Eye and can be used to prepare and cache additional
	ray-processing data that is eye-local.

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	Rnr invalidation now done by rnrs themselves; each ray is also
	delivered to lens-image (to update link/list representation).

	* Eye/FTW.cxx:
	* Eye/FTW.h:
	Removed check-ins/outs for A_Views; use A_View::SetImg(). Fixed a
	bug in display of status line during drag-n-drop.

	* Eye/FTW_Ant.cxx:
	* Eye/FTW_Ant.h:
	* Eye/FTW_Branch.cxx:
	* Eye/FTW_Branch.h:
	* Eye/FTW_Leaf.cxx:
	* Eye/FTW_Leaf.h:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Shell.cxx:
	* Eye/FltkGledStuff.cxx:
	* Eye/FltkGledStuff.h:
	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Reflecting changes in optical systems.

	* RnrBase/RnrScheme.cxx:
	* RnrBase/RnrScheme.h:
	Removed file: code moved to A_Rnr.

	* RnrBase/A_Rnr.cxx:
	* RnrBase/A_Rnr.h:
	A_Rnr now subclasses A_View (and can thus absorb rays); RnrScheme
	creatiion is now steered by a virtual method
	A_Rnr::CreateRnrScheme. Implementation of RnrScheme has been moved
	here.

	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Creation of RnrScheme is now the task of A_Rnr (RnrDriver still
	provides lens/image to rnr demangling (or instantiation) and some
	service methods for filling RnrSchemes); implemented RnrMod stacks
	hashed by FID_t: these allow low-level renderers to set-up and
	retrieve configuration data via TObject*.

	* Gled/GledTypes.h:
	Added hash function for FID_t, made some FID_t methods const.

	* GledView/GledViewNS.h:
	Simplification of RnrCtrl: removed bRnrSelf and bRnrLinks.

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Added link mRnrMod and flags for control of self/element
	rendering (bRnrSelf, bRnrElements, bModSelf, bModElements). Added
	templated method GrepParentByGlass.

	* Glasses/ZRnrModList.cxx:
	* Glasses/ZRnrModList.h:
	* Rnr/GL/ZRnrModList_GL_Rnr.cxx:
	* Rnr/GL/ZRnrModList_GL_Rnr.h:
	New glass: on Pre/PostDraw calls Pre/PostDraw of all
	elements. Needed for setting up several modificators to a ZNode.

	* glass.list:
	New entry for ZRnrModList; ZNodeLink uses own rnr.

	* Rnr/GL/ZNodeLink_GL_Rnr.cxx:
	* Rnr/GL/ZNodeLink_GL_Rnr.h:
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	* Rnr/GL/ZNode_GL_Rnr.h:
	Override A_Rnr::CreateRnrScheme to produce configurable rendering.
	
	* Rnr/GL/GlobalLamps_GL_Rnr.cxx:
	* Rnr/GL/GlobalLamps_GL_Rnr.h:
	* Rnr/GL/LampLink_GL_Rnr.cxx:
	* Rnr/GL/LampLink_GL_Rnr.h:
	Use RnrDriver to obtain Lamp renderers.

	* Glasses/Scene.cxx:
	* Glasses/Scene.h:
	Removed mRnrMods link: now available from ZNode.

	* Net/Ray.h:
	Added quantum numbers RQN_list_begin and RQN_list_end to
	facilitate handling of list changes in A_Views.

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	Stamp() optionally takes eye_bits to be set to ray. Removed
	RnrCtrl pragma.

	* Glasses/AList.h:
	* Glasses/Box.h:
	* Glasses/Camera.h:
	* Glasses/EyeInfo.h:
	* Glasses/GledMonitor.h:
	* Glasses/GlobalLamps.h:
	* Glasses/Lamp.h:
	* Glasses/LampLink.h:
	* Glasses/NestInfo.h:
	* Glasses/PerfMeterOperator.h:
	* Glasses/PerfMeterTarget.h:
	* Glasses/PipeEventor.h:
	* Glasses/PupilInfo.h:
	* Glasses/SaturnInfo.h:
	* Glasses/SaturnObserver.h:
	* Glasses/ScreenDumper.h:
	* Glasses/ScreenText.h:
	* Glasses/ShellInfo.h:
	* Glasses/Sphere.h:
	* Glasses/Text.h:
	* Glasses/ZCometBag.h:
	* Glasses/ZDeque.h:
	* Glasses/ZEunuch.h:
	* Glasses/ZFilterAggregator.h:
	* Glasses/ZFireKing.h:
	* Glasses/ZFireQueen.h:
	* Glasses/ZGlBlending.h:
	* Glasses/ZGlLightModel.h:
	* Glasses/ZGlMaterial.h:
	* Glasses/ZGlStateBase.h:
	* Glasses/ZGod.h:
	* Glasses/ZGroupIdentity.h:
	* Glasses/ZHashList.h:
	* Glasses/ZIdentity.h:
	* Glasses/ZIdentityFilter.h:
	* Glasses/ZIdentityListFilter.h:
	* Glasses/ZKing.h:
	* Glasses/ZList.h:
	* Glasses/ZMEESelfFilter.h:
	* Glasses/ZMethodTagPreFilter.h:
	* Glasses/ZMirEmittingEntity.h:
	* Glasses/ZMirFilter.h:
	* Glasses/ZNameMap.h:
	* Glasses/ZNodeLink.cxx:
	* Glasses/ZNodeLink.h:
	* Glasses/ZQueen.h:
	* Glasses/ZRlFont.h:
	* Glasses/ZRlNameRnrCtrl.h:
	* Glasses/ZSubTree.h:
	* Glasses/ZSunQueen.h:
	Clean-up of RnrCtrl constructors; in most cases they are not
	needed anymore.

2005-02-04  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/MTW_View.cxx:
	Increased width-growth factor for joining widgets to 2.

	* Glasses/Scene.cxx:
	* Glasses/Scene.h:
	Added link to ZList where one can put GL modificators to set
	default rendering style for the scene (calls Pre/Post draw on all
	list members).

	* Glasses/ZGlBlending.cxx:
	* Glasses/ZGlBlending.h:
	Added support for BlendEquation and BlendConstColor.

	* Rnr/GL/ZGlBlending_GL_Rnr.cxx:
	* Rnr/GL/ZGlBlending_GL_Rnr.h:
	* Rnr/GL/ZGlLightModel_GL_Rnr.cxx:
	* Rnr/GL/ZGlLightModel_GL_Rnr.h:
	* Rnr/GL/ZGlMaterial_GL_Rnr.cxx:
	* Rnr/GL/ZGlMaterial_GL_Rnr.h:
	Separated GL-state-setup so that the renderers can also be used as
	state modificators via PreDraw/PostDraw. Appropriate GL attribute
	groups are pushed and popped.

2005-02-01  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Mountain.cxx:
	* Ephra/Mountain.h:
	Write-lock eventor during all all callbacks to Eventor processing
	methods (Operator::Operate is NOT locked). Split WipeThread to two
	functions so OnExit is called when the thread is already
	unregistered from the stage (but eventor write-lock is acquired
	first).

	* Eye/OptoStructs.cxx:
	Bugfix: ZListView::AbsorbRay RQN_list_remove removed ALL
	occurrences of the lens, not just one.

2005-01-29  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	RemoveLenses() can be called in synchronous mode.
	Also realized that it can safely run in a detached MIR thread; so
	quite some code went away.

	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	New function RemoveLensesViaQueen(Bool_t recurse=false). Calls
	mQueen->RemoveLenses(this) via a MIR and waits for result report.

2005-01-28  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	Rewrite of reverse-reference handling to use hash_map instead of a
	list. When almost done I realized that hash_multiset would be the
	right choice ... well ... next time.
	Method remove_references_to() now returns number of removed refs.
	
	* Glasses/ZHashList.cxx:
	* Glasses/ZHashList.h:
	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	* Glasses/ZNameMap.cxx:
	* Glasses/ZNameMap.h:
	Method remove_references_to() now returns number of removed refs.

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	Support for (recursive) removal of lists. RemoveLenses(ZGlass* lens)
	spawns a dedicated thread that inspects the directory structure
	and emits flares to collapse complete sub-directories in a single
	method PutListElementsToPurgatory(ZList* list). It's also viewer
	friendly. Removal of 128*1024 ZNodes takes 20sec (with one eye
	connected).

	Lenses with non-zero EyeRefCount are now turned into zombies and
	deleted later.
	
	Made stamping of ID-space changes (number of free/taken IDs) 
	optional (controled by Bool_t bStampIdOps).
	
	* Gled/GledTypes.h:
	Added typedefs for hash_map<ZGlass*, Int_t>.

	* macros/sun.C:
	Increased capacity of default queen Scenes to 256*1024.

	* Ephra/Saturn.cxx:
	* Eye/Eye.cxx:
	Sanitization of messages and debug output.

	* Eye/FTW_Branch.cxx:
	Use Leoim list size for display of ZList size.

2005-01-24  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Branch.cxx:
	Another bug in clear_list handling. Probably wasn't consistent
	previous time.

	* Eye/FltkGledStuff.cxx:
	Only grep for shell when needed; bombed during window destruction.

	* Eye/Pupil.cxx:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Added custom ray type camera_home; declared all PupilInfo's custom
	ray-types in an enum.

2005-01-24  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	* Eye/Eye.cxx:
	Minor clean-up.

	* Eye/FTW_Shell.cxx:
	Spawn MCW_View under mouse location.

	* Eye/MCW_View.h:
	Removed mShell, it's available from FTW_Shell_Client.

	* Eye/Pupil.cxx:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Implemented orthographic projection, added corresponding controls.

	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	Added missing call to ZComet::AssignQueen in AdoptComet; lens
	removal uses main MIR execution thread again. There were problems
	on non-nptl kernels when spawning a bit more threads (~300 did the
	job).

	* Stones/ZComet.cxx:
	Changed default value of bWarnOn and bVerbose to false; clean-up
	of reporting.

	* macros/sun.C:
	Increased default size of queen Scenes to 128*1024.

2005-01-21  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Eye.cxx:
	* Eye/FTW.cxx:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	* Eye/FltkGledStuff.cxx:
	* Eye/FltkGledStuff.h:
	* Eye/MCW_View.cxx:
	* Eye/MCW_View.h:
	* Eye/OptoStructs.cxx:
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Added class FTW_Shell_Client for consistent access to parent shell.

2005-01-21  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Branch.cxx:
	* Glasses/ZHashList.cxx:
	* Glasses/ZHashList.h:
	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	* Glasses/ZNameMap.h:
	Implemented ZList::SortByName(). 

2005-01-19  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.h:
	* Eye/Eye.h:
	* Eye/FTW_Ant.h:
	* Eye/FTW_Leaf.h:
	* Eye/FTW_Nest.h:
	* Eye/MCW_View.h:
	* Eye/MTW_Layout.h:
	* Eye/Pupil.h:
	* Glasses/Eventor.h:
	* Glasses/EyeInfo.h:
	* Glasses/LampLink.h:
	* Glasses/NestInfo.h:
	* Glasses/PerfMeterOperator.h:
	* Glasses/PupilInfo.h:
	* Glasses/SaturnInfo.h:
	* Glasses/SaturnObserver.h:
	* Glasses/Scene.h:
	* Glasses/ScreenDumper.h:
	* Glasses/ShellInfo.h:
	* Glasses/Text.h:
	* Glasses/ZEunuch.h:
	* Glasses/ZFilterAggregator.h:
	* Glasses/ZFireQueen.h:
	* Glasses/ZGlass.h:
	* Glasses/ZIdentity.h:
	* Glasses/ZIdentityFilter.h:
	* Glasses/ZIdentityListFilter.h:
	* Glasses/ZKing.h:
	* Glasses/ZMethodTagPreFilter.h:
	* Glasses/ZMirEmittingEntity.h:
	* Glasses/ZNodeLink.h:
	* Glasses/ZQueen.h:
	* Glasses/ZSubTree.h:
	* Glasses/ZSunQueen.h:
	* Gled/GThread.h:
	* Gled/Gled.h:
	* GledView/GledGUI.h:
	* RnrBase/RnrDriver.h:
	* Stones/ZComet.h:
	* Stones/ZHisto.cxx:
	* Stones/ZHisto.h:
	* Stones/ZHistoDir.cxx:
	* Stones/ZHistoDir.h:
	Const-correctness changes (project7 now properly generates const
	Get methods).

2005-01-19  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW.cxx:
	* Eye/FTW.h:
	* Eye/FltkGledStuff.cxx:
	New Source selector Direct, now used for dnd; middle mouse now
	pastes shell's source (can be used as a complement to dnd).

	* Eye/FTW_Branch.cxx:
	Fixed buggy logick for adding new elements w/ respect to Collapse
	status.
	
	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	New method X_SetSource(ID_t) to support use of Direct lens Source.

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Complete rewrite of camera positioning.
	Some new features in ick menu: Camera JumpTowards and JumpAt,
	SetAsSource (set shell's direct source).

	* Glasses/Camera.cxx:
	* Glasses/Camera.h:
	Home didn't call Stamp.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Added members mLookAtMinDist and mUpRefMinAngle to provide better
	control over camera behaviour.

	* Net/Ray.h:
	User ray quantum numbers now easier to address.

	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	New method UnitTrans() to reset the transformation to identity.

2005-01-14  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/MTW_Layout.cxx:
	* Eye/MTW_SubView.cxx:
	* Eye/MTW_View.cxx:
	* Eye/Pupil.cxx:
	* GledView/GLTextNS.cxx:
	Replaced all accurances of >? and <? with TMath::Max/Min.

2005-01-10  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	Consistent messages during MEE connection/disconnection.
	
	* Glasses/AList.h:
	Fully-quantified ClassDef(AList::ElRep); html-doc generators had
	some trouble otherwise.
	
	* Gled/Gled.h:
	* GledView/GledGUI.h:
	* macros/eye.C:
	eye.C exits immediately if Gled::theOne->HasGUILibs() is false
	(HasGUILibs being a new virtual method in Gled).

	* macros/moon.C:
	A cast to ZQueen was missing.

	* Makefile:
	Reintroduced -I/usr/kerberos/include to CPPFLAGS.

2004-12-24  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Branch.cxx:
	Usage of bLeavesCreated was not consistent. For expanded branches:
	after clear_list new ftw_leaves were not created.
	
	* Eye/FTW_Shell.cxx:
	Consolidation of menu-fillers.
	
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Menu consolidation, new method JumpTo (also a menu entry) and
	improved mouse precision specification.

	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Support for improved mouse precision specification.

	* Glasses/ZQueen.cxx:
	In RemoveLens: if lens is already being removed warn instead of
	throwing an exception.

2004-12-21  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Changed default z-value from 0 to 1e-3. 0 didn't render anything on
	some GLs.
	
	* Glasses/ScreenText.cxx:
	* Glasses/ScreenText.h:
	* Rnr/GL/ScreenText_GL_Rnr.cxx:
	* Rnr/GL/ScreenText_GL_Rnr.h:
	New glass ScreenText. Allows text placement in window coordinates.
	
	* glass.list:
	New glass ScreenText.
	
2004-12-17  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Eye.cxx:
	* Eye/FTW_Shell.cxx:
	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	* Eye/OptoStructs.cxx:
	* Eye/Pupil.cxx:
	* Glasses/Box.cxx:
	* Glasses/Eventor.cxx:
	* Glasses/NestInfo.cxx:
	* Glasses/PerfMeterTarget.cxx:
	* Glasses/PupilInfo.cxx:
	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	* Glasses/ZList.cxx:
	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	* Glasses/ZSunQueen.cxx:
	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	* Gled/GledTypes.h:
	* GledView/GledViewNS.cxx:
	* GledView/GledViewNS.h:
	* Net/Ray.cxx:
	* Net/Ray.h:
	* Stones/ZComet.cxx:
	* catalog.patch:
	Restructuring and clean-up of GlassInfo structures. FID_t now
	used consistently in most of the code. Glasses offer direct access
	to GledNS::ClassInfo structure. LinkSpec has been replaced by
	ZGlass::LinkRep structure that contains a reference to the link and
	a pointer to GledNS::LinkMemberInfo.
	
2004-12-13  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Menus created by FTW_Shell are now also usable for external consumers;
	picking in Pupil has been modified to use this functionality.
	
2004-12-12  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Saturn.cxx:
	Improved logging of shutdown process.
	
	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	* gled.cxx:
	* saturn.cxx:
	Support logging and output to files; new command line options.
	See gledimp or 'gled --help' for details.
	
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	* Eye/FTW_Shell.cxx:
	From Alja : modularize FTW_Nest construction to allow for state
	slurping from NestInfo.
	
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	From Alja: sort pick hits by depth; different display modes.
	Also removed some obsolete code.
	
	* Glasses/NestInfo.cxx:
	* Glasses/NestInfo.h:
	From Alja: added layout specifications members to allow a FTW_Nest
	to be spawned with a specified custom layout.
		
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	From Alja: added picking display modes, substituted PickW and
	PickH with PickR(adius).

	* Glasses/PerfMeterOperator.cxx:
	Added protection against undefined mBeamHost in send_beam_or_flare().

	* Gled/GThread.cxx:
	* Gled/GThread.h:
	Improved interface for temporary disabling thread cancellation;
	new helper class GThreadKeepAlive.
	
	* GledView/GLTextNS.cxx:
	* GledView/GLTextNS.h:
	New function RnrTextAt(...): render some text in screen
	coordinates. Useful for reporting in full-screen mode.
	
	* GledView/GledViewNS.h:
	Added RnrCtrl(const RnrBits& rb) ctor.
	
	* Rnr/GL/Lamp_GL_Rnr.cxx:
	Fixes for self rendering.
	
	* RnrBase/RnrDriver.h:
	Added ptr export for colors.
	
	* catalog.patch:
	Pragmas for helper classes.

	* GledView/user_init.cxx:
	Removed registration of custom MTW layouts.
	
	* macros/eye.C:
	* macros/moon.C:
	* macros/sun.C:
	Exported declarations of some variables, consolidation.
	
	* perllib/GLED_Widgets.pm:
	Added FL_WHEN_ENTER_KEY to when() of Textor, tooltip for Filor.
	
	* Eye/Eye.cxx:
	* Eye/Eye.h:
	* Eye/MCW_View.cxx:
	* Eye/OptoStructs.h:
	Clean-up of includes.
	
	* Stones/ZColor.h:
	Const-correctness changes.
	
	* Gled/GledNS.h:
	Formatting changes.
	
2004-11-30  Matevz Tadel  <matevz.tadel@ijs.si>

	==================================================
	Check-in of major changes from 1.2.3 towards 1.2.4
	==================================================

	Changes that influence several groups of files:
	===============================================
	
	[RD7] RnrDriver now uses exactly 7 rnr levels
	---------------------------------------------
	This allowed for a simplification in declaration of RnrCtrl in a
	glass header. Most glasses are affected by this; the files with
	*only* this change are not listed in in this entry.

	[AbsorbRay] New method of Ray delivery via A_View::AbsorbRay(Ray&)
	------------------------------------------------------------------
	Affects most View classes. Offers a more flexible way of Ray
	delivery and allows for a cleanar interface on the Eye side.

	[FTW2FGS] Migration of some code from FTW to FltkGledStuff namespace
	--------------------------------------------------------------------
	Functions to measure label widths and grep for parents have been
	taken out from FTW namespace. Originally FTW was meant as
	collection of widgets needed for FTW_* classes.
	
	Changes by file:
	================
	
	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Saturn now supports detached MIR execution. Reworked all MIR
	entry points to use auto_ptr. Some minor improvements in MIR and
	Ray handling.

	* Net/Ray.cxx:
	* Net/Ray.h:
	Preparations for new AList implementation, addition of custom
	buffers and user_rays.

	* Eye/Eye.cxx:
	* Eye/Eye.h:
	[AbsorbRay], new method of Message/Error delivery, forced exit
	from Manage loop and a fix in Image removal.
	
	* Eye/FTW.cxx:
	* Eye/FTW.h:
	[AbsorbRay] + [FTW2FGS].
	
	* Eye/FltkGledStuff.cxx:
	* Eye/FltkGledStuff.h:
	New files; namespace encapsulating gled specific fltk related
	functions [FTW2FGS].

	* Eye/FTW_Branch.cxx:
	* Eye/FTW_Branch.h:
	* Eye/FTW_Leaf.cxx:
	* Eye/FTW_Leaf.h:
	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	[AbsorbRay].
	
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	[AbsorbRay] + [FTW2FGS].
	
	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	[AbsorbRay] + handling of MCW widgets.
	
	* Eye/MTW_Layout.cxx:
	[FTW2FGS].
	
	* Eye/MTW_SubView.cxx:
	[FTW2FGS] + fix of width calculation for -join option.
		
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	[AbsorbRay], image dumping and some clean-up.

	* Eye/MCW_View.cxx:
	* Eye/MCW_View.h:
	New files; implementation of MethodCallWidget. Supports context
	arguments and basic types masked via root typedefs.
	
	* Glasses/ScreenDumper.cxx:
	* Glasses/ScreenDumper.h:
	New files; assists dumping of a Pupil to a tga file.

	* Glasses/ZRlFont.cxx:
	* Glasses/ZRlFont.h:
	* Glasses/ZRlNameRnrCtrl.cxx:
	* Glasses/ZRlNameRnrCtrl.h:
	* Rnr/GL/Scene_GL_Rnr.cxx:
	* Rnr/GL/Scene_GL_Rnr.h:
	* Rnr/GL/ZRlFont_GL_Rnr.cxx:
	* Rnr/GL/ZRlFont_GL_Rnr.h:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.cxx:
	* Rnr/GL/ZRlNameRnrCtrl_GL_Rnr.h:
	* lib/fontdefault.txf:
	* lib/fonthelvetica34.txf:
	New files; preliminary support for multiple GL fonts and
	management of name-tag rendering.

	* Glasses/AList.cxx:
	* Glasses/AList.h:
	* Glasses/ZDeque.cxx:
	* Glasses/ZDeque.h:
	New files; preparation for new container implementation.
	
	* Glasses/Eventor.cxx:
	* Glasses/Eventor.h:
	* Glasses/Operator.h:
	Added Int_t fEventID to Operator::Arg.
	
	* Glasses/EyeInfo.cxx:
	* Glasses/EyeInfo.h:
	[RD7], new mechanism for TextMessage delivery to Eyes.
	
	* Glasses/Lamp.cxx:
	* Glasses/Lamp.h:
	[RD7], new defaults for Diffuse (white) and Specular (grey20).
	
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	[RD7], new members controlling width/height of the window, rendering of
	name tags methods for emission of Rays triggering image dumps.
	
	* Glasses/Text.cxx:
	* Glasses/Text.h:
	New members: link to ZRlFont, bCenter; [RD7].
	
	* Glasses/ZCometBag.cxx:
	* Glasses/ZCometBag.h:
	[RD7], attempt at an interface to specify root file and internal
	path.

	* Glasses/ZFireQueen.cxx:
	* Glasses/ZFireQueen.h:
	Implemented virtual DemangleID(ID_t) without dependency check (as
	proper to FireQueen) to allow ZComet unstreaming.
	
	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	ZMIR* now in GThread TSD, clearer naming for ZGlass::Rebuild*
	methods, Ray emission more flexible.
	
	* Glasses/ZHashList.cxx:
	* Glasses/ZHashList.h:
	Clearer naming for ZGlass::Rebuild* methods, implementation of virtual
	After/Before methods.
	
	* Glasses/ZKing.cxx:
	* Glasses/ZKing.h:
	MIR passing via auto_ptr.
	
	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	Clearer naming for ZGlass::Rebuild* methods, Ray emission more flexible.
	
	* Glasses/ZNameMap.cxx:
	* Glasses/ZNameMap.h:
	Clearer naming for ZGlass::Rebuild* methods.
	
	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	Order-of-magintude implementation, better methods to traverse
	parental hierarchy; [RD7].
	
	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	Improvement of lens deletion, Ray emission control, ZComet
	adoption; [RD7].

	* Glasses/ZSunQueen.cxx:
	* Glasses/ZSunQueen.h:
	MIR passing via auto_ptr, [RD7].
	
	* Stones/SEvTaskState.cxx:
	* Stones/SEvTaskState.h:
	* Rnr/GL/SEvTaskState_GL_Rnr.cxx:
	* Rnr/GL/SEvTaskState_GL_Rnr.h:
	New files; representation of a task composed from several
	events to be processed.
	
	* Gled/MIR_Priest.h:
	New file; abstract base for ZQueen and ZKing.
	
	* Gled/GMutex.cxx:
	* Gled/GMutex.h:
	New classes GLensReadHolder and GLensWriteHolder.
	
	* Gled/GThread.cxx:
	* Gled/GThread.h:
	GThread now stores ZMIR as TSD. ReturnAddress and ReturnHandle not
	needed anymore.

	* Gled/GTime.cxx:
	* Gled/GTime.h:
	Systematization of operator+=, added Sleep methods.

	* Ephra/Mountain.cxx:
	Follow-ups to GTime changes.
	
	* Gled/GledMirDefs.h:
	MIR passing via auto_ptr.
	
	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	MethodInfo catalog extended for detached MIR exec, sanitization of
	message ids, new utility function split_string().
	
	* GledView/GLTextNS.cxx:
	* GledView/GLTextNS.h:
	Clean-up original code so that it only uses gl-1.2 functionality,
	new methods for rendering text in pixel coordinates.

	* GledView/GledGUI.cxx:
	Errors now delivered to console and to the main gled window.
	
	* GledView/GledViewNS.h:
	[RD7].
	
	* GledView/user_init.cxx:
	Added OM control for ZNode custom view.
	
	* Rnr/GL/Lamp_GL_Rnr.cxx:
	Now renders a tethraedron if Lamp::bDrawLamp is true.
	
	* Rnr/GL/SphereTrings.cxx:
	* Rnr/GL/SphereTrings.h:
	Added index arrays (much faster), clean-up.
	
	* Rnr/GL/Text_GL_Rnr.cxx:
	Centering of text, clean-up.
	
	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* Rnr/GL/ZGlass_GL_Rnr.h:
	Added options bUseNameStack and bSuppressNameLabel.
	
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	Added OM handling, new name-tag rendering code (using GLTextNS).
	
	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Stuff to steer name-tag rendering, [RD7].
	
	* Stones/ZComet.cxx:
	Clearer naming for ZGlass::Rebuild* methods.
	
	* Stones/ZMIR.cxx:
	* Stones/ZMIR.h:
	Extension of MirBits to support detached MIR execution.
	
	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	Added interface to set/get base vectors from/to TVector3;
	new functions to perform un-scaling and Gram-Schmidt
	orthonormalization.

	* catalog.patch:
	Changes for GMutex holders and forthcoming list implementation.
	
	* glass.list:
	New glasses: ScreenDumper, ZRlNameRnrCtrl, ZRlFont; preliminary
	entries for AList, ZDeque.
		
	* Gled/GSelector.cxx:
	* Tvor/TubeTvor.h:
	* perllib/GLED_Widgets.pm:
	Minor changes / clean-ups.
	
2004-07-20  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/MTW_Layout.cxx:
	* Eye/MTW_Layout.h:
	Custom layout: improved handling of widths; added tooltips for
	narrow labels.
	
	* Eye/FTW_Nest.cxx:
	* GledView/GledViewNS.cxx:
	* GledView/GledViewNS.h:
	External (via GledViewNS) interface for adding custom layouts that
	show-up on "View/Predef Custom" menu entry in FTW_Nest. For
	examples see demos/Geom1/WS_demo.C or demos/McParticulator/test.C.

	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Added full-screen mode (bound to <f>).
	
	* Stones/ZColor.h:
	Added operator+=().
	
	* perllib/GLED_Widgets.pm:
	New weed StoneOutput. See GTS/Glasses/GTSurf for example.

	* gled.cxx:
	* saturn.cxx:
	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* Gled/GledNS.cxx:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	* GledView/user_init.cxx:
	Clean-up of GledCore catalog bootstrap.

	* Eye/OptoStructs.cxx:
	* Glasses/ZGlBlending.h:
	* Glasses/ZQueen.h:
	Minor beautifications.

2004-06-07  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/MTW_View.cxx:
	Fixed a bug resulting (after some time) in a corrupt window title.

	* Eye/Pupil.cxx:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	Display of RPS now optional (PupilInfo::bShowRPS), weed formatting
	changes.
	
2004-06-06  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/Eye.cxx:
	* Eye/FTW_Branch.cxx:
	* Eye/FTW_Branch.h:
	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	* Net/Ray.cxx:
	* Net/Ray.h:
	Added new Ray quantum number Ray::RQN_list_clear.

	* Glasses/ZGlLightModel.cxx:
	* Glasses/ZGlLightModel.h:
	* Rnr/GL/ZGlLightModel_GL_Rnr.cxx:
	Fixed a type in mLightModelOp variable name.
	
2004-06-02  Matevz Tadel  <matevz.tadel@ijs.si>

	==================================================
	Check-in of major changes from 1.2.2 towards 1.2.3
	==================================================

	* Glasses/Text.cxx:
	* Glasses/Text.h:
	* GledView/GLTextNS.cxx:
	* GledView/GLTextNS.h:
	* Rnr/GL/Text_GL_Rnr.cxx:
	* Rnr/GL/Text_GL_Rnr.h:
	New files; GL text support.
	
	* Glasses/ZEunuch.cxx:
	* Glasses/ZEunuch.h:
	* Glasses/ZFireKing.cxx:
	* Glasses/ZFireKing.h:
	* Glasses/ZFireQueen.cxx:
	* Glasses/ZFireQueen.h:
	New files; place-holders for the coming re-implementation of queen
	dependency management and mirroring.
	
	* Glasses/ZGlBlending.cxx:
	* Glasses/ZGlBlending.h:
	* Glasses/ZGlLightModel.cxx:
	* Glasses/ZGlLightModel.h:
	* Glasses/ZGlMaterial.cxx:
	* Glasses/ZGlMaterial.h:
	* Glasses/ZGlStateBase.cxx:
	* Glasses/ZGlStateBase.h:
	* Rnr/GL/ZGlBlending_GL_Rnr.cxx:
	* Rnr/GL/ZGlBlending_GL_Rnr.h:
	* Rnr/GL/ZGlLightModel_GL_Rnr.cxx:
	* Rnr/GL/ZGlLightModel_GL_Rnr.h:
	* Rnr/GL/ZGlMaterial_GL_Rnr.cxx:
	* Rnr/GL/ZGlMaterial_GL_Rnr.h:
	New files; GL state modificators.

	* Stones/ZColorMark.cxx:
	* Stones/ZColorMark.h:
	New files; ZColor with a float for gradients (see Geom1::ZRibbon).

	
	* Ephra/Mountain.cxx:
	* Ephra/Mountain.h:
	* Glasses/Eventor.cxx:
	* Glasses/Eventor.h:
	Added thread cancelation support. See Eventor::Cancel() and
	Mountain::Cancel().
	
	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	Many improvements.
	New thread: delayed mir shooter (at given time).
	New thread: ray shooter (allows beter handling of Rays).
	Rewrite of UnfoldMIR(): proper exception handling and reporting.
	
	* Eye/Eye.cxx:
	* Eye/Eye.h:
	Support for removal of lenses.
	
	* Eye/FTW.cxx:
	* Eye/FTW.h:
	* Eye/FTW_Ant.cxx:
	* Eye/FTW_Ant.h:
	* Eye/FTW_Branch.cxx:
	* Eye/FTW_Leaf.cxx:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	* Eye/MTW_SubView.cxx:
	* Eye/MTW_SubView.h:
	* Eye/MTW_View.cxx:
	* Eye/MTW_View.h:
	Support for measuring of label widths and minor GUI improvements.
	
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	Infrastructure for picking menus, GL text support and display of
	fps.
	
	* Glasses/EyeInfo.h:
	* Glasses/ZMirEmittingEntity.h:
	New virtual member SaturnInfo* HostingSaturn().
	
	* Glasses/SaturnInfo.cxx:
	* Glasses/SaturnInfo.h:
	New methods Message() and Error() to properly report MIR failures
	(and other stuff) from executions on other Saturns.
	
	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	Reverse references, referencing control, new/cleaner locking
	mechanism.
	
	* Glasses/ZHashList.cxx:
	* Glasses/ZHashList.h:
	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	* Glasses/ZNameMap.cxx:
	* Glasses/ZNameMap.h:
	New referencing/unreferencing/clearing mechanisms.
	
	* Glasses/ZKing.cxx:
	* Glasses/ZKing.h:
	BlessMIR() now performs mild context checks, modifications for
	future queen management.	
	
	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	New locking, transition to ROOT vec/mat classes.
	
	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	Many major improvements.
	Support for delition of lenses.
	Better check-in/out implementation.
	Better ZComet handling and unpacking.
	Introduction of zero-ref-count policy.
	New member BroadcastMIRToNonRulingReflections(); simplifies
	maintainance of coherent queen-state. Methods, that need to be
	executed also on non-active reflections (dependencies, mandatory 
	status) now use this facility.
	Better ray handling and control.
	New locking.
	
	* Gled/GCondition.cxx:
	* Gled/GCondition.h:
	Member TimedWait() renamed to TimedWaitMS(), new member
	TimedWaitMus().

	* Gled/GMutex.cxx:
	* Gled/GMutex.h:
	New class GMutexHolder. Usefull for locking with automatic
	variables in view of exceptions.
	
	* Gled/GThread.cxx:
	* Gled/GThread.h:
	Moved ZMirEmittingEntity* owner from member data to TLS for proper
	access control.
	
	* Gled/GTime.cxx:
	* Gled/GTime.h:
	Added relational and equality operators.
	
	* Gled/Gled.cxx:
	* Gled/Gled.h:
	Now using TSystem::Getenv().
	
	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	Renaming of methods stem Glass to Lens where appropriate. Addition
	of some global functions.

	* Gled/GledTypes.h:
	Addition of An_ID_Demangler virtual base and removal of index
	types for ex ZVector, ZMatrix classes.
	
	* Net/Ray.cxx:
	Beautification of debug output.
	
	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* Rnr/GL/ZGlass_GL_Rnr.h:
	Added support for automatic creation of GL display lists on per
	lens level.
	
	* RnrBase/RnrDriver.cxx:
	* RnrBase/RnrDriver.h:
	Support for a default GL font.

	* Stones/ZColor.h:
	Added to_ubyte() member.

	* Stones/ZComet.cxx:
	* Stones/ZComet.h:
	* Stones/ZMIR.cxx:
	* Stones/ZMIR.h:
	Now use An_ID_Demangler; some minor additions.

	* Stones/Z3Mark.cxx:
	* Stones/Z3Mark.h:
	* Stones/Z3Point.cxx:
	* Stones/Z3Point.h:
	* Stones/ZMark.cxx:
	* Stones/ZMark.h:
	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	Transition to pure ROOT vector/matrix classes.
	
	* catalog.patch: 
	* glass.list:
	Extensions with new glasses, fixes.
	
	* macros/eye.C:
	New check before opening a default pupil.
	
	* perllib/GLED_Widgets.pm:
	Extension of PhonyEnum. Now the class understands enums declared
	in glasses.

	* gled.cxx:
	* saturn.cxx:
	Added initialization of ROOT thread system.

	* FL/Fl_TransCtrl.cxx:
	* FL/Fl_TransCtrl.h:
	Fix of box-type and suppresion of widget update when new value is
	the same as the one shown.

	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	* Glasses/Box.cxx:
	* Glasses/Box.h:
	* Glasses/PerfMeterOperator.h:
	* Glasses/PerfMeterTarget.cxx:
	* Glasses/PipeEventor.cxx:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	* Glasses/Sphere.h:
	* Glasses/ZCometBag.cxx:
	* Glasses/ZIdentityFilter.h:
	* Glasses/ZIdentityListFilter.h:
	* Glasses/ZMirFilter.h:
	* Glasses/ZSunQueen.cxx:
	* Glasses/ZSunQueen.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:
	* Tvor/TubeTvor.h:
	* Rnr/GL/PupilInfo_GL_Rnr.cxx:
	* Rnr/GL/SphereTrings.cxx:
	* Rnr/GL/ZNode_GL_Rnr.cxx:
	Minor changes.

	* <all-files>:
	Extension of copyright to 2004.


2004-01-12  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW.cxx:
	* Eye/FTW.h:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Shell.h:
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	* Glasses/PupilInfo.cxx:
	* Glasses/PupilInfo.h:
	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:

	Dnd support, camera attachment. Nameboxes in Nest support dnd for
	a) pushing elements to the end of the list or b) setting links.
	Camera can be attached to an object in the scene that is connected
	to PupilInfo in question. Node that the default camera is looking
	at and the reference object for "up" direction can also be
	specified.
	
	* Gled/GledNS.cxx:
	* Gled/GledNS.h:

	Added LibSetInfo* FindLibSetInfo(const string& lib_set).

	* GledView/GledViewNS.cxx: Bugfix in ViewSet init.

2003-12-27  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/MTW_SubView.cxx:
	* Eye/MTW_SubView.h:

	Introduced static MinLabelWidth to limit the minimal label width.

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	* Glasses/ZNameMap.cxx:
	* Glasses/ZNameMap.h:
	* Gled/GledNS.cxx:
	* Gled/GledNS.h:

	Standardization of Get/Find methods and lens callbacks.  Replaced
	ZList::Query() with a more general ZGlass::FindLensByPath(). The
	path is tokenized by GledNS::tokenize_url(). YNameChangeCB is now
	declared within the ZGlass class.

	* Gled/GledTypes.h: Extended struct LinkSpec.
	
	* Gled/Gled.cxx: Attempt at catcing exceptions from TRint::Run().

	* Makefile: Introduced double-colon rules for standard targets.

	* Glasses/ZNode.cxx:
	* Glasses/ZNode.h:
	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	* Rnr/GL/ZNode_GL_Rnr.cxx:

	Added scaling support into ZNode.
	
	* Glasses/ZSunQueen.cxx:
	* macros/glass_defines.h:
	* macros/moon.C:
	* macros/std_auth.C:

	Put in accordance with ZGlass::FindLensByPath().
	
	* Rnr/GL/Lamp_GL_Rnr.cxx:

	Minor changes.
	
2003-11-18  Matevz Tadel  <matevz.tadel@ijs.si>

	* gled.cxx:
	* saturn.cxx:

	Fixed initialization order. TRint is now instantiated ASAP.

2003-11-17  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW.cxx:
	* Eye/FTW.h:
	* Eye/FTW_Branch.cxx:
	* Eye/FTW_Branch.h:
	* Eye/FTW_Leaf.cxx:
	* Eye/FTW_Leaf.h:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:

	Added reporting of ZList sizes in the FTW::NameButton.
	
	* Glasses/ZGroupIdentity.cxx:
	* Glasses/ZGroupIdentity.h:
	* Glasses/ZIdentity.cxx:
	* Glasses/ZIdentity.h:

	Moved link to list of active MMEs (mActiveMMEs) from
	ZGroupIdentity to ZIdentity.
		
	* Glasses/ZSunQueen.cxx:
	* Glasses/ZSunQueen.h: Added links to Saturn & Eye guest
	identities. Changes to reflect ZIdentity change.

	* Gled/Gled.cxx:
	* Gled/Gled.h:   Improved RSA key handling and checking.
	
	* Glasses/EyeInfo.h: Added tag MEE::Self to Message() and Error().
	* Glasses/ZKing.cxx: Improved BlessMIR().
	* Glasses/ZMirEmittingEntity.cxx: Minor improvement.
	* Glasses/ZQueen.cxx: Lens instantiation consistency fix.
	* GledView/GledGUI.cxx:	Added -font command line option.
	* macros/std_auth.C: Added guest registration and set-up.


2003-11-07  Matevz Tadel  <matevz.tadel@ijs.si>

	==================================================
	Check-in of major changes from 1.2.1 towards 1.2.2
	==================================================

	1) Saturn and ZMIR
	==================
	
	Synchronous MIR execution and MIR results
	-----------------------------------------

	MIRs can now be executed synchronously and can return arbitrary
	data stream. MIRs with result request should only be sent from
	threads, as synchronous execution blocks the calling thread until
	the result (or error) is available. Also, locking an object for
	the duration of a sync MIR is a bad idea and can lead to
	deadlocks.

	Flares just wait.
	
	Beams can also request Beam Result. It is simply a TBuffer
	containing an arbitrary datagram (usually streamed ROOT
	objects). Of course, the caller must know the return data format.
	
	* Glasses/SaturnObserver.cxx:
	* Glasses/SaturnObserver.h: New glass, demo for beam-shooting.
	
	MIR shooting thread
	-------------------

	Saturn now has a bunch of methods allowing "shooting of MIRS" in
	separate threads. There is a standard thread running on the Saturn
	that routes and possibly executes the threads that were shot into
	the solar system.

	Shooting is complementary to posting where the MIR is
	routed/executed in the calling thread itself.
	
	Exec / Broadcast order
	----------------------
	
	Until now, flares were first broadcasted and only later executed.
	
	Now flares are executed first on the master Saturn (where Alpha is
	in the sun-space) and NOT broadcasted if an exception is thrown or
	ZMIR::SuppressFlareBroadcast is set to true.
	
	
	2) Authentication & Authorization infrastructure
	================================================

	This contains loads of changes. Please see documentation for
	details.
	
	* Glasses/ZFilterAggregator.cxx:
	* Glasses/ZFilterAggregator.h:
	* Glasses/ZGroupIdentity.cxx:
	* Glasses/ZGroupIdentity.h:
	* Glasses/ZIdentity.cxx:
	* Glasses/ZIdentity.h:
	* Glasses/ZIdentityFilter.cxx:
	* Glasses/ZIdentityFilter.h:
	* Glasses/ZIdentityListFilter.cxx:
	* Glasses/ZIdentityListFilter.h:
	* Glasses/ZMEESelfFilter.cxx:
	* Glasses/ZMEESelfFilter.h:
	* Glasses/ZMethodTagPreFilter.cxx:
	* Glasses/ZMethodTagPreFilter.h:
	* Glasses/ZMirEmittingEntity.cxx:
	* Glasses/ZMirEmittingEntity.h:
	* Glasses/ZMirFilter.cxx:
	* Glasses/ZMirFilter.h:
	* Gled/GKeyRSA.cxx:
	* Gled/GKeyRSA.h:
	* Stones/ZMirExchangeSession.h:
	* bin/gled-auth-genkeypair:
	* bin/gled-auth-init:
	* cfg/gled-auth.rc:
	* macros/glass_defines.h:
	* macros/std_auth.C:
	* perllib/Gled_Shell_Wrappers.pm:

	New files (authentication and authorization).
	
	* Makefile:
	* catalog.patch:
	* glass.list:

	* Ephra/Mountain.cxx:
	* Ephra/Mountain.h:
	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	* Eye/Eye.cxx:
	* Eye/Eye.h:

	* Glasses/EyeInfo.cxx:
	* Glasses/EyeInfo.h:
	* Glasses/SaturnInfo.cxx:
	* Glasses/SaturnInfo.h:

	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	* Glasses/ZKing.cxx:
	* Glasses/ZKing.h:
	* Glasses/ZNode.h:
	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	* Glasses/ZSunQueen.cxx:
	* Glasses/ZSunQueen.h:
	
	* Gled/GThread.cxx:
	* Gled/GThread.h:
	
	* Gled/Gled.cxx:
	* Gled/Gled.h:
	* Gled/GledMirDefs.h:
	* GledView/GledGUI.cxx:
	* GledView/GledGUI.h:

	* Stones/ZMIR.cxx:
	* Stones/ZMIR.h:
	* macros/sun.C:

	Changes due to authentication and authorization support.

	
	3) ZGlass
	=========
	
	ZGlass::mGlassBits: 
	-------------------
	
	Added a bit-field for describing state of a lens on a
	Saturn. Values described in namespace ZGlassBits.

	
	ZGlassBits::FixedName glass bit
	-------------------------------
	
	If this bit is set the name of lens can not be changed.
	
	Reference counting
	------------------
	
	Now done separately for each type of object space
	(moon/sun/fire). Inc/DecRefCount methods take ZGlass* argument
	specifying the lens that is (de)referencing the object.
		
	Name change callback
	--------------------

	SetName method has been changed to make callbacks when the name of
	a lens changes. Used by ZNameMap. Names MAY NOT contain '/'
	characters. They will be silently converted to '_'.
	
	This could in principle be solved by using Stamping mechanism.
	That would require some list on the Saturn side (ideally in the
	ZGlass itself), possibly with RayQN filter. That's how name change
	callback is implemented anyway.
	

	4) ZNameMap
	===========
	
	* Glasses/ZNameMap.cxx:
	* Glasses/ZNameMap.h:	New container base glass.

	Keeps elements sorted by their name. Registers self to each
	element of the map to receive name-change callback.  All add
	methods are overridden to the Insert() method.
	
	ZQueen now inherits from ZNameMap (ZHashList before). Therefore
	queens provide a fast directory service (e.g. Auth/Identities in
	ZSunQueen).
	
	
	5) ZList::Query
	===============

	ZList::Query(path) provides access method to retrieve lenses from
	nested lists. Example path: "Auth/Identities/foo.bar@baz.org".
	'/' is a directory separator.
	
	Could be extended to ZGlass, need semantics for links
	
	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	* Glasses/ZHashList.cxx:
	* Glasses/ZHashList.h:	 Query() method implemented. 

	6) Gled
	=======
	
	A&A options: -authdir, -saturnid, -eyeid, -noauth.

	Currently Gled provides a service for finding of files containing
	public/private keys. This should be done otherwise ... once
	external identity/group servers are incorporated.
	
	
	7) GledNS & GledViewNS
	======================
	
	Most of glass-catalogues moved to GledNS (from GledViewNS).  This
	is needed for per method access control (implemented through
	method tags on project7/catalogue level).
	
	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	* GledView/GledViewNS.cxx:
	* GledView/GledViewNS.h:
	
	* Eye/FTW.cxx:
	* Eye/FTW.h:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Shell.cxx:
	* Eye/FTW_Shell.h:
	* Eye/MTW_Layout.cxx:
	* Eye/MTW_Layout.h:
	* Eye/MTW_SubView.cxx:
	* Eye/MTW_SubView.h:
	* Eye/MTW_View.cxx:
	* Eye/OptoStructs.cxx:
	* Eye/OptoStructs.h:
	
	Changes related to migration of glass catalogues from GledViewNS
	to GledNS.
	
	8) Minor changes
	================
	
	* Glasses/Eventor.cxx:
	* Glasses/Eventor.h: Added bXMultix variable describing multix
	state of the running thread. Fixed SetHost() to follow new
	ref-counting scheme.
	
	* Glasses/NestInfo.h:
	* Glasses/ShellInfo.h:	Const-correctness fix.
	
	* Gled/GTime.cxx:
	* Gled/GTime.h:		TimeUntilNow() now returns GTime.
	
	* Gled/GledTypes.h:	Added default args for FID_t ctor.
	
	* gled.cxx:
	* saturn.cxx:	Common thread functions moved to class Gled.
	
	* macros/gl_defines.h:	Added protection against multiple inclusion.
	
	* perllib/GLED_Widgets.pm: All widgets now call self-update after
	sending a MIR. No locking is done!

	* Eye/Pupil.cxx:	Initialization fix.

	* Stones/ZTrans.cxx:
	* Stones/ZTrans.h:
	* RnrBase/RnrDriver.cxx:
	* Glasses/Box.h:	Beautification.
	
	
2003-09-11  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Mountain.cxx:
	* Ephra/Mountain.h:
	* Glasses/Eventor.cxx:
	* Glasses/Eventor.h:
	* Glasses/Operator.cxx:
	* Glasses/Operator.h:

	Improved timing of thread execution by using GTime.
	
	* Gled/GCondition.cxx:
	* Gled/GCondition.h:

	Fixed variable naming in TimedWait(UInt_t wait_ms) to properly
	reflect that argument is expected in miliseconds.

	* Gled/GTime.cxx:
	* Gled/GTime.h:

	New class. Time in micro-second precision.
	
	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	* Glasses/ZGlass.cxx:
	* Glasses/ZGlass.h:
	* Glasses/ZList.cxx:
	* Glasses/ZList.h:
	* Glasses/ZQueen.cxx:
	* Glasses/ZQueen.h:
	* Net/Ray.cxx:
	* Net/Ray.h:
	
	New implementation of stamping mechanism. Lenses now Stamp
	themselves via their ZQueen. Each queen can block emission of
	stamps for all hers subjects. Each lens has its own TimeStamp.
	There is no central timestamp on Saturn anymore.

	* Rnr/GL/ZGlass_GL_Rnr.cxx:
	* Rnr/GL/ZNode_GL_Rnr.cxx:

	Brought in accordance with the new stamping model.
	
	* Eye/Eye.cxx:
	* Eye/Eye.h:

	Changed Saturn socket to non-blocking mode.
	There are problems with receiving ROOT messages (Rays) in
	non-blocking mode when incoming buffer is filled-up.
	
	* Gled/GledMirDefs.h: Added #include <memory>.

	* Gled/GledTypes.h: Use ROOT types for core typedefs of Gled.
	
	* perllib/GLED_Widgets.pm: New option -seqvals for
	Widgets::PhonyEnum.  See Glasses/PerfMeterOperator.h.
	
	* Glasses/PipeEventor.h:
	* Glasses/PipeEventor.cxx:
	* Glasses/PipeEventor.h:
	* Glasses/PerfMeterTarget.cxx:
	* Glasses/PerfMeterTarget.h:
	* Glasses/PerfMeterOperator.cxx:
	* Glasses/PerfMeterOperator.h:
	* glass.list:

	New glasses.
	PipeEventor: Spawns a command via gSystem->PipeOpen() in write
	mode.
	PerfMeters: Allow timing of MIR processing infrastructure.
	
2003-07-22  Matevz Tadel  <matevz.tadel@ijs.si>

	* Ephra/Mountain.cxx:
	* Ephra/Mountain.h:
	* gled.cxx:
	* saturn.cxx:

	Changed user-thread code to be POSIX compliant (used LinuxThreads
	specifics before).

	In particular SigUSR1 and SigUSR2 are used to suspend/restart
	signal-safe threads. TRint is stopped by thread cancellation.
	
	* Gled/GledNS.cxx:
	* Gled/GledNS.h:
	* Ephra/Saturn.cxx:
	* Ephra/Saturn.h:
	* Eye/Eye.cxx:

	Restructuring of protocol for new server connections.

	Now have a static Int_t Saturn::s_Gled_Protocol_Version.  The
	connecting client now sends messages with well defined types to
	initiate server response.
	
	* Glasses/ZGlass.h: mExecMutex and mRefCountMutex are now
	mutable. Needed for const Get methods when locking is required.

	* Rnr/GL/TubeTvor_GL_Rnr.cxx:
	* Tvor/TubeTvor.cxx:
	* Tvor/TubeTvor.h:

	Added support for texture coordinates.
	
	* Gled/GSelector.h: Changed default mutex init to fast (was
	resursive) for consistency.

	* Glasses/Eventor.cxx:
	* Glasses/EyeInfo.cxx:
	* Glasses/ZNode.cxx:
	* Eye/Pupil.cxx:
	* Eye/Pupil.h:
	* GledView/GledGUI.cxx:

	Minimal code clean-up.
	
2003-07-11  Matevz Tadel  <matevz.tadel@ijs.si>

	* Eye/FTW.cxx:
	* Eye/FTW_Leaf.cxx:
	* Eye/FTW_Leaf.h:
	* Eye/FTW_Nest.cxx:
	* Eye/FTW_Nest.h:
	* Eye/MTW_Layout.cxx:
	* Eye/MTW_View.cxx:

	Added InfoBar to FTW_Nest (it displays some information about
	Leaf/Ant below mouse).
	
	Some minor additions (option to reverse order of ants,
	separator between glass groups in Creator class menu).

	Fixed some Fl_SWM related problems (ColorChooser, size of
	predefined custom views menu).

2003-07-07  Matevz Tadel  <matevz.tadel@ijs.si>

	* Glasses/ZGlass.h:
	* Glasses/ZList.cxx:
	* Glasses/ZList.h:

	Virtualized Stamping methods.

	* Gled/GMutex.h:
	* Tvor/TubeTvor.h:

	Minor changes.

2003-06-17  Matevz Tadel  <matevz.tadel@ijs.si>

	* Saturn.cxx: Fixed initialization order of variables in
	arrival_of_kings().


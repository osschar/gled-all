# $Header$

# NOTE: Linking of nested classes, enums and typedefs IS enabled by default.

$PATCH = {

"Gled" => {
  'Pragmas' =>
    "#pragma link C++ global Gled::theOne;\n" .
    "#pragma link C++ global gGled;\n"
},

"GledNS" => {
  'Pragmas' => "#pragma link C++ function GForm;\n"
},

"ZGlass" => {
  'PrePragmas' => "#pragma link C++ class ZLinkBase-;\n",
  'Pragmas'    => "#pragma link C++ class ZGlass::NameChangeCB+;\n" .
                  "#pragma link C++ class ZGlass::RayAbsorber+;\n"  .
                  "#pragma link C++ class FID_t+;\n"                .
                  "#pragma link C++ class FMID_t+;\n"               .
                  "#pragma link C++ class An_ID_Demangler+;\n"      .
	          "#pragma link C++ class MIR_Priest+;\n"
},

"AList" => {
  'PragmaSuff' => "-",
  'VirtualBase' => 1,
  'Pragmas' =>
   "#pragma link C++ class AList::ElRep+;\n" .
   "#pragma link C++ class list<ZGlass*>;\n" .
   "#pragma link C++ class list<ZGlass*>::iterator;\n" .
   "#pragma link C++ typedef lpZGlass_t;\n" .
   "#pragma link C++ typedef lpZGlass_i;\n"
},

"ZDeque" => {
  'PragmaSuff' => "-",
},

"ZList" => {
  'PragmaSuff' => "-",
# The following line left as documentation.
# 'C7_DoNot_Gen' => { 'RebuildLinkRefs' => 1 }
},

"ZMirEmittingEntity" => {
  'VirtualBase' => 1
},

"ZMIR"=> {
  'Pragmas'    => "#pragma link C++ class ZMIR_Result_Report;\n",
},

"ZComet" => { 'PragmaSuff' => "-" },

"GMutex" => 
{
 'Pragmas' =>
  "#pragma link C++ class GMutexHolder;\n"     .
  "#pragma link C++ class GMutexAntiHolder;\n" .
  "#pragma link C++ class GLensReadHolder;\n"  .
  "#pragma link C++ class GLensWriteHolder;\n"	
},

"GThread" => 
{
 'Pragmas' =>
  "#pragma link C++ class GThreadKeepAlive;\n"
}

};
